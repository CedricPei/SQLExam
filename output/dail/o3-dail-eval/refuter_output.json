[
  {
    "question_id": 12,
    "result": {
      "judgement": "Predicted query uses a pre-computed percent column that is null for all qualifying schools, yielding None instead of the actual maximum rate (~0.905), so it fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 77,
    "result": {
      "judgement": "Predicted query returns the fraction (0–1) instead of the percent 0–100, so the numeric answer is off by a factor of 100.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 31,
    "result": {
      "judgement": "Predicted query correctly computes the eligible free rate for the 10th and 11th highest-enrollment schools; including the school names does not violate the question’s requirement and still delivers the requested rates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 40,
    "result": {
      "judgement": "Predicted query lets NULL reading scores rank first and returns a different phone, so it does not guarantee the lowest actual average reading score; gold correctly excludes NULLs.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 100,
    "result": {
      "judgement": "Prediction counts distinct accounts instead of distinct female customers, violating the requirement to count customers.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 117,
    "result": {
      "judgement": "Predicted query correctly computes 100 * sum(amount) for status 'A' divided by total amount, matching the requested percentage.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 39,
    "result": {
      "judgement": "Prediction matches the question: it averages NumTstTakr for Fresno schools whose OpenDate year is 1980, with no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 137,
    "result": {
      "judgement": "Predicted query correctly counts accounts in branch 1 that have at least one loan with status C or D, matching the question’s intent; no unjustified filters are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 46,
    "result": {
      "judgement": "Prediction matches gold logic, returning the top-enrolled state special school (DOC=31) and even adds enrollment column; this satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 36,
    "result": {
      "judgement": "Prediction matches the gold and satisfies retrieving the administrators of the school with the top NumGE1500; no explicit requirement is violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 62,
    "result": {
      "judgement": "Prediction satisfies all stated conditions and matches the intended count of non-charter Los Angeles schools with <0.18% free-meal rate.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 47,
    "result": {
      "judgement": "Predicted query performs integer division, yielding 1 instead of the correct 1.416667, so it under-reports the monthly average of school openings.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 45,
    "result": {
      "judgement": "Predicted query joins schools with SAT scores, filters for administrator Ricci Ulrich, and returns each school with the average writing score, matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 92,
    "result": {
      "judgement": "Prediction filters female clients and counts distinct districts with average salary strictly between thresholds, matching the question; minor boundary difference from gold is acceptable and results coincide.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 72,
    "result": {
      "judgement": "Predicted query correctly filters State Special School in Fremont for academic year 2014-2015 and returns the 5-17 enrollment, satisfying the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 173,
    "result": {
      "judgement": "Prediction ignores the '3539 in total' requirement, selecting every single 3539-amount transaction (many rows) instead of the k_symbol whose summed debits equal 3539, so it does not faithfully answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 79,
    "result": {
      "judgement": "Predicted query correctly returns the county (among San Diego and Santa Barbara) with the greatest number of exclusively-virtual schools and the associated count; no extra or missing filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 85,
    "result": {
      "judgement": "Prediction correctly filters for schools with administrator first name 'Alusine', computes the requested eligible-free percentage using the provided formula, and returns the district code as asked; column order difference is inconsequential.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 200,
    "result": {
      "judgement": "Prediction matches the required filters for carcinogenic molecules having at least one triple bond; no unjustified predicates are added and missing DISTINCT does not change meaning.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 89,
    "result": {
      "judgement": "Prediction matches the required filters and correctly counts the qualifying accounts in the East Bohemia region.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 208,
    "result": {
      "judgement": "Prediction correctly finds the label with the greatest number of hydrogen atoms using equivalent grouping and ordering logic as the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 115,
    "result": {
      "judgement": "Predicted query correctly selects the South Bohemia district(s) with the maximum inhabitants and computes male-client percentage, matching the question’s intent; no extra or missing filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 93,
    "result": {
      "judgement": "Prediction returns 0 because it matches region string with different case, while data requires lowercase; therefore it fails to count the 280 relevant clients.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 218,
    "result": {
      "judgement": "Predicted query works at atom level, counting non-fluorine atoms over all atoms, whereas the question asks for the share of molecules without any fluorine atoms; thus it violates the core requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 99,
    "result": {
      "judgement": "Predicted query correctly filters duration >12, account year 1993, picks highest approved amount, and returns the account (extra amount column is harmless).",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 116,
    "result": {
      "judgement": "Predicted query picks the same account, correct balances and formula, returning correct increase rate (duplicate rows benign); aligns with the question just like gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 240,
    "result": {
      "judgement": "Predicted query correctly lists the elements for molecule TR004; duplicates do not violate the question’s requirement, so it is acceptable despite differing from gold’s DISTINCT.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 95,
    "result": {
      "judgement": "Predicted query adds the salary filter but ties it to the client’s district and yields no rows, so it fails to list any account numbers requested; it therefore does not answer the question.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": false
    }
  },
  {
    "question_id": 112,
    "result": {
      "judgement": "Predicted query uses the account’s district via disp→account, matching a plausible reading of where the account was opened; no unjustified filters are added.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 268,
    "result": {
      "judgement": "Prediction returns only the element of atom_id but omits atom_id2, so it fails to list all elements involved in the bond; this violates the plural request for “elements”.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 118,
    "result": {
      "judgement": "Predicted query correctly computes the share of loans under 100 000 USD whose status is ‘C’, matching a reasonable reading of the question and the gold logic; the unnecessary join does not alter results.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 327,
    "result": {
      "judgement": "Prediction lists the same set of molecule_ids satisfying label='-' and atom count>5 (extra label column is benign), so it correctly answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 138,
    "result": {
      "judgement": "Predicted query counts male clients in the district whose 1995 crime count is the highest value below the overall max, matching a valid interpretation of \"second-highest\"; no explicit requirement is violated.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 352,
    "result": {
      "judgement": "Predicted query counts translation rows rather than distinct cards, so it computes the percentage of foreign-language entries, not the percentage of cards available in Chinese Simplified as asked.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 159,
    "result": {
      "judgement": "Predicted query correctly filters the client’s accounts and the operation ‘VYBER’, listing the withdrawals (extra columns acceptable); no requirement is violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 368,
    "result": {
      "judgement": "Prediction exactly computes 100 * (# borderless) / total cards, matching the question and gold SQL.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 383,
    "result": {
      "judgement": "Predicted query correctly counts joined rows with banned status and white border like gold, differing only in COUNT(*), so answer is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 405,
    "result": {
      "judgement": "The prediction counts distinct sets in the Commander block with language = 'Portuguese (Brasil)', matching the stated requirements, while the gold query filters on 'Portuguese (Brazil)' and risks duplicate counting, so the prediction is semantically correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 192,
    "result": {
      "judgement": "Prediction filters on trans.k_symbol instead of account.frequency, so it does not capture the intended “statement issuance after each transaction” accounts, giving no rows and a wrong average.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 195,
    "result": {
      "judgement": "Prediction matches gold in selecting the bond_type with highest frequency; no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 412,
    "result": {
      "judgement": "Prediction satisfies all stated constraints and returns the same set of French foreign names as the gold; use of type LIKE '%Creature%' is semantically sound.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 422,
    "result": {
      "judgement": "Predicted query matches the gold and correctly retrieves the card language for multiverseid 149934.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 201,
    "result": {
      "judgement": "Prediction counts only atoms explicitly listed as the first participant in a double-bond record, not all atoms in molecules that contain double bonds, so the computed percentage is wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 198,
    "result": {
      "judgement": "Predicted query returns a proportion of single-bond connections among atoms, whereas the question asks for the average number of single bonds per carcinogenic molecule; thus it violates the required aggregation granularity.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 459,
    "result": {
      "judgement": "Prediction matches the intent, correctly returning the higher-cost card between the two.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 212,
    "result": {
      "judgement": "Predicted query correctly counts total atom occurrences per element in non-carcinogenic molecules as implied by “least numerous refers to MIN(COUNT(element))”, while gold counts molecules per element, so prediction is preferable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 213,
    "result": {
      "judgement": "Predicted query accurately retrieves the bond_type for the specified pair of atoms with the correct symmetric OR condition, matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 215,
    "result": {
      "judgement": "Prediction gives one combined count, while the question (and gold) call for separate counts of iodine-atoms and sulfur-atoms; thus prediction fails to meet the requested granularity.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 230,
    "result": {
      "judgement": "Prediction lists the required elements and label for molecule TR060; extra duplicate rows do not violate the question, so it is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 236,
    "result": {
      "judgement": "Predicted query correctly retrieves the bond type and both atom ids for bond TR001_6_9; filtering on bond.bond_id is equivalent to filtering on connected.bond_id via the join.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 219,
    "result": {
      "judgement": "Predicted query computes the fraction of triple bonds among bonds in carcinogenic molecules, whereas the question asks for the fraction of carcinogenic molecules among molecules that have triple bonds, which the gold query implements.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 260,
    "result": {
      "judgement": "Predicted query restricts atoms to those directly involved in a triple bond, while gold only needs the molecule to have any triple bond; since wording allows either reading, prediction remains a plausible interpretation.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 239,
    "result": {
      "judgement": "Predicted query counts all bond_id rows where either atom column involves atom 19, matching the stated definition of a connection, while the gold query looks only at one column and therefore misses half of them.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 234,
    "result": {
      "judgement": "Predicted query correctly counts TR009 bonds containing atom 12, while gold mistakenly filters for atoms 1 and 2, yielding an inflated count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 522,
    "result": {
      "judgement": "Predicted query uses lower-case 'banned', yielding no rows; thus it fails to list the 1st-ranked cards and their banned formats.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 244,
    "result": {
      "judgement": "Prediction correctly picks the molecule with the most double bonds and converts its '+'/'-' label into a Yes/No answer, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 531,
    "result": {
      "judgement": "Predicted query correctly picks the higher-reputation user among the two names and thus answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 249,
    "result": {
      "judgement": "The query only fetches the element for connected.atom_id, omitting the element for connected.atom_id2, so it does not list all atoms of bond TR144_8_19 as requested.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 281,
    "result": {
      "judgement": "Prediction correctly counts each element occurring as the 4th atom in carcinogenic molecules; the only difference from gold is returning counts rather than just distinct values, which matches a reasonable reading of “tally.”",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 539,
    "result": {
      "judgement": "Predicted SQL exactly matches gold and correctly retrieves the post owner's display name.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 555,
    "result": {
      "judgement": "Predicted query correctly computes the average score of posts owned by user with DisplayName 'csgillespie'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 567,
    "result": {
      "judgement": "Predicted query correctly counts posts belonging to user with display name 'Tiago Pasqualini'; join direction is equivalent to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 573,
    "result": {
      "judgement": "Predicted query matches gold and fully satisfies the request to list comment texts with score 17.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 341,
    "result": {
      "judgement": "Predicted query correctly selects borderless cards where either foil ID or regular ID is missing, thus excluding all with the powerful-foil pairing, and returns their names; the gold query omits the foil-ID check and only returns IDs, so gold is faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 586,
    "result": {
      "judgement": "Prediction correctly identifies display names of users who placed a 50-point bounty on posts whose titles include 'variance'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 263,
    "result": {
      "judgement": "Predicted query only considers atoms appearing in connected.atom_id, omitting those in connected.atom_id2, so it counts only one atom per single bond instead of all atoms in single-bond molecules; this under-counts both numerator and denominator and yields an incorrect percentage.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 242,
    "result": {
      "judgement": "Predicted query extracts a fixed 2-character slice starting at position 7, which misses the intended atom indices when the atom serial has three digits (e.g., “_021”, “_125”); the gold instead robustly takes the last two characters and returns the correct molecules, so the prediction yields no rows and is semantically wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 377,
    "result": {
      "judgement": "Prediction matches the required filters and aggregation; COUNT(*) vs COUNT(id) is equivalent since id is non-null primary key.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 598,
    "result": {
      "judgement": "Predicted query divides by all badges instead of just student badges, so the computed percentage difference for student badges is wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 273,
    "result": {
      "judgement": "Predicted query computes chlorine atoms divided by total atoms for carcinogenic molecules, matching question intent; denominator via COUNT(molecule_id) is equivalent to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 282,
    "result": {
      "judgement": "Prediction returns 0 hydrogen ratio because it matches 'H' instead of 'h', so it gives an incorrect answer for TR006.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 665,
    "result": {
      "judgement": "Predicted SQL correctly counts 2010 links associated with posts having ≤2 answers and divides by 12, matching question intent and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 344,
    "result": {
      "judgement": "Predicted query applies the required rarity, format, and banned-status filters and lists the matching cards; duplicates are permissible for a simple list, so it satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 678,
    "result": {
      "judgement": "Predicted query correctly selects the post (id and title) with the highest ViewCount authored by user Harvey Motulsky, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 349,
    "result": {
      "judgement": "Predicted query correctly finds the card (and its artist) with the greatest number of rulings and reports the isPromo flag, whereas the gold query instead restricts to promo cards and counts card records per artist without using rulings, thus not matching the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 366,
    "result": {
      "judgement": "Prediction matches gold and correctly retrieves the play formats (rules) for Benalish Knight.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 379,
    "result": {
      "judgement": "Prediction returns the IDs of cards whose duelDeck is 'a', fully matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 408,
    "result": {
      "judgement": "Both queries apply the required unknown-power filter, but the phrase “contain info about the triggered ability” could reasonably be sought in either cards.text (prediction) or rulings.text (gold); given identical column name “text” in both tables, the schema permits both interpretations, so the prediction cannot be deemed wrong.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 710,
    "result": {
      "judgement": "Prediction correctly counts comments with score 0 on posts having exactly one comment, whereas gold mistakenly filters on post score 0, so gold is wrong and prediction is right.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 723,
    "result": {
      "judgement": "Predicted query correctly counts superheroes whose eye colour is blue and who possess the power “Agility,” matching the question’s requirements",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 415,
    "result": {
      "judgement": "Predicted query returns NULL because it mismatches the actual status value capitalization, so it fails to compute the requested percentage while the gold query succeeds.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 427,
    "result": {
      "judgement": "Predicted query correctly retrieves the languages for the set whose mcmName is 'Archenemy' and whose set code is 'ARC'; filtering on T1.code after an equality join is semantically identical to filtering on T2.setCode, so no requirement is violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 356,
    "result": {
      "judgement": "Predicted query correctly counts rows where power equals '*' using COUNT(id), which is equivalent since id is never NULL; no requirement violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 737,
    "result": {
      "judgement": "Prediction matches the gold and correctly retrieves Copycat's race.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 416,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of cards with NULL or '*' power that are French; it aligns with question requirements like the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 371,
    "result": {
      "judgement": "Predicted query counts language rows rather than distinct cards, so it miscomputes the requested percentage of cards in French; both pred and gold share this flaw, but prediction is still incorrect relative to the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 743,
    "result": {
      "judgement": "Predicted query miscomputes the Marvel-Comics count by using COUNT with an ELSE 0, which counts every superhero, so returned 741 instead of the correct 118 and therefore does not answer the question accurately.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 465,
    "result": {
      "judgement": "The question asks about a Korean version of the set that contains the card, so the correct check is in set_translations (set-level), whereas the prediction looks for a Korean printing of the card in foreign_data (card-level); therefore the predicted SQL answers the wrong requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 750,
    "result": {
      "judgement": "Predicted query correctly averages weights for female superheroes by filtering the same set via gender_id=2, matching the gold result.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 440,
    "result": {
      "judgement": "Prediction lists the same language multiple times but still identifies Portuguese (Brazil), satisfying the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 760,
    "result": {
      "judgement": "Predicted query is semantically equivalent to gold and satisfies all explicit requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 466,
    "result": {
      "judgement": "Predicted query correctly counts cards with artist 'Adam Rex' whose set translation is 'Hauptset Zehnte Edition'; added join to sets is benign and does not change semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 479,
    "result": {
      "judgement": "Predicted query correctly counts Coldsnap cards with converted mana cost >5 whose power is unknown, matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 769,
    "result": {
      "judgement": "Prediction returns no hero because it mismatches the attribute value case, so it fails to identify the Dark Horse Comics hero with highest durability.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 779,
    "result": {
      "judgement": "Both queries count the number of powers linked to the superhero named 'Amazo'; the predicted subquery is semantically equivalent to the join in the gold and meets the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 473,
    "result": {
      "judgement": "Predicted query correctly checks isForeignOnly for Adarkar Valkyrie and returns 0 (i.e., NO), satisfying the yes/no question despite numeric encoding.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 480,
    "result": {
      "judgement": "Prediction matches the gold logic and correctly retrieves the Italian flavor text for the specified card.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 786,
    "result": {
      "judgement": "Predicted query correctly limits the MAX calculation to the Strength attribute, matching the question, whereas the gold query takes the max over all attributes and could miscount; therefore the prediction stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 794,
    "result": {
      "judgement": "Prediction matches gold and correctly selects the hero with maximum speed attribute.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 391,
    "result": {
      "judgement": "Prediction lists cards whose colors merely contain B, causing extra multicolored artifacts (e.g., Thopter Foundry, Time Sieve) and omits several strictly-black artifacts required; thus it does not answer the question correctly.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 800,
    "result": {
      "judgement": "Prediction correctly computes blue-eyed superheroes (eye_colour_id = 7) as a percentage of all superheroes, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 822,
    "result": {
      "judgement": "Predicted query correctly counts superheroes whose skin colour is green and whose alignment is bad, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 529,
    "result": {
      "judgement": "Predicted query correctly enforces existence of Korean translation and absence of Japanese translation, while gold query fails to exclude sets that do have Japanese translations, so gold is wrong and Prover should be upheld.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 859,
    "result": {
      "judgement": "Prediction correctly selects Q1 time for Bruno Senna in race 354, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 537,
    "result": {
      "judgement": "Both queries count the posts whose owner has display name 'csgillespie'; the subquery formulation is acceptable given the question’s assumption of a single user.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 549,
    "result": {
      "judgement": "Prediction matches the required logic, selecting the body of the post referenced by ExcerptPostId for the 'bayesian' tag; no missing or extra predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 533,
    "result": {
      "judgement": "Predicted query reasonably answers the question, differing from gold only in whether to include accesses occurring on 2014-09-01 itself—a point that is ambiguous in the wording. Both interpretations are defensible, so the Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 547,
    "result": {
      "judgement": "Predicted query correctly counts posts with score ≥20 authored by users older than 65, matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 563,
    "result": {
      "judgement": "Predicted query is semantically identical to gold, retrieving the post’s FavoriteCount via same join and filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 565,
    "result": {
      "judgement": "Prediction correctly checks ClosedDate to return Yes/No and matches the question’s logic; string difference from gold is immaterial.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 875,
    "result": {
      "judgement": "Predicted query correctly retrieves the season page URL for the year of race 901; no requirements violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 572,
    "result": {
      "judgement": "Predicted query matches the title filter exactly and returns the desired ViewCount, meeting all stated requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 881,
    "result": {
      "judgement": "Predicted query correctly computes percentage of drivers with non-null time for race on 1983-07-16, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 414,
    "result": {
      "judgement": "Predicted query matches gold and correctly returns languages for the 180-card Ravnica set.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 578,
    "result": {
      "judgement": "Predicted query correctly joins posts to users on owner id and returns the user's display name and reputation for the specified post title, matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 901,
    "result": {
      "judgement": "Predicted query filters for September 2005 and joins circuits, returning race name, circuit name, and location—matching the question requirements equivalently to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 910,
    "result": {
      "judgement": "Predicted query exactly matches gold and satisfies question; no issues.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 930,
    "result": {
      "judgement": "Predicted query correctly identifies a race where Hamilton achieved his best (minimum) rank, differing from gold only in tie-handling but still satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 629,
    "result": {
      "judgement": "Prediction matches gold logic; ratio computed for years 2010 and 2011 exactly as required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 424,
    "result": {
      "judgement": "Predicted query returns the correct proportion and, despite using COUNT(isTextless) instead of COUNT(*), still measures the share of text-less normal-layout cards among all cards because isTextless evidently has no NULLs in the data; this aligns with the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 584,
    "result": {
      "judgement": "The question can refer either to edit–summary comments stored in postHistory (gold) or to actual post comments written by those same editors (predicted); the prediction follows a fully reasonable interpretation using the comments table.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 671,
    "result": {
      "judgement": "Predicted query correctly finds the user with the earliest Autobiographer badge and returns their display name exactly as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 633,
    "result": {
      "judgement": "Predicted query correctly returns the post id owned by the user named 'slashnick' with the highest AnswerCount, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 477,
    "result": {
      "judgement": "Predicted query correctly identifies the artists among the given list who worked on Coldsnap; extra duplicate rows do not violate the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 486,
    "result": {
      "judgement": "Predicted query correctly computes the required percentage for cards of converted mana cost 7 within the Coldsnap set, matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 950,
    "result": {
      "judgement": "Prediction lists constructors that scored 0 points in race 291, which is a reasonable reading of the request; gold instead uses season-standing points, so both queries answer different but plausible interpretations.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 685,
    "result": {
      "judgement": "Predicted query filters on posts.Title and returns no row, missing the required post identified by Text in postHistory; therefore it fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 705,
    "result": {
      "judgement": "Predicted query matches the gold and correctly retrieves the reputation and up-vote count for the user who wrote the specified comment.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 640,
    "result": {
      "judgement": "Predicted query correctly subtracts total view counts of posts whose OwnerUserId belongs to users named Mornington and Amos, matching “posts posted by” wording, whereas gold counts any post that the user merely appears in postHistory, so gold is likely wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 978,
    "result": {
      "judgement": "Prediction reasonably gives counts per Austrian location along with coordinates, matching a fair reading of “How many times … give their location and coordinates”, whereas gold omits the counts; no clear error in prediction.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 733,
    "result": {
      "judgement": "Prediction follows the question exactly, matching gold aside from table aliases order; count of superheroes with gold eyes published by Marvel is correctly computed.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 739,
    "result": {
      "judgement": "Predicted query correctly lists superhero names that have the superpower 'Death Touch'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 672,
    "result": {
      "judgement": "Prediction correctly counts distinct UK users with at least one post having FavoriteCount ≥ 4, matching the question, whereas the gold counts posts and uses an exact location match.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 745,
    "result": {
      "judgement": "Prediction correctly returns the id for the publisher named 'Star Trek' as requested.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 687,
    "result": {
      "judgement": "Predicted query correctly counts comments for the absolute highest-score post (returning 0 if none), whereas the gold query excludes posts with no comments, so the prediction meets the question better.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 764,
    "result": {
      "judgement": "Prediction matches the question; omitting DISTINCT is acceptable for a simple list query.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 707,
    "result": {
      "judgement": "Predicted query correctly filters comments belonging to posts with 100-150 views and returns the top-scoring comment text, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 773,
    "result": {
      "judgement": "Predicted query satisfies eye=hair=skin condition and returns superhero and publisher as asked, so it is correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 719,
    "result": {
      "judgement": "Predicted query correctly counts superheroes with the specified power and height, merely adding DISTINCT to avoid potential double-counting, which does not violate any requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1030,
    "result": {
      "judgement": "Predicted query correctly finds the league with the most draws in the 2015/2016 season and matches gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 782,
    "result": {
      "judgement": "Both queries correctly return superheroes whose eye_colour and hair_colour rows denote 'Black'; prediction is semantically aligned with the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 790,
    "result": {
      "judgement": "Predicted query computes Emil Blonsky weight minus Charles Chandler weight via conditional sums, matching the question intent and gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 544,
    "result": {
      "judgement": "Predicted query matches gold and fully satisfies the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 797,
    "result": {
      "judgement": "Predicted query exactly matches gold and satisfies the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 806,
    "result": {
      "judgement": "Prediction matches the question and schema with no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1036,
    "result": {
      "judgement": "Prediction computes the average over all years, not restricted to 2012, so it violates the time-specific comparison requested, yielding a different team set.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 825,
    "result": {
      "judgement": "Prediction matches gold logic, selecting superhero gender with 'Phoenix Force' power, no extraneous predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 736,
    "result": {
      "judgement": "Prediction finds the superhero with the lowest Intelligence attribute by ordering ascending and limiting to 1, matching the question and gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1042,
    "result": {
      "judgement": "Predicted query correctly computes per-league home and away averages for 2009/2010 and returns league names where home average exceeds away average, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 740,
    "result": {
      "judgement": "Predicted SQL follows the required filters and counts superheroes (with DISTINCT) – fully answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 568,
    "result": {
      "judgement": "Predicted SQL correctly joins votes to users and filters by vote id 6347 to return the voter’s display name, matching the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 862,
    "result": {
      "judgement": "Predicted query counts drivers with NULL time in 2007 Bahrain Grand Prix, exactly matching the requirement; extra driver join in gold is unnecessary.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 747,
    "result": {
      "judgement": "Prediction counts superheroes whose full_name is NULL, fully satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 576,
    "result": {
      "judgement": "Predicted query properly joins comments to users and returns the commenter’s DisplayName matching the given text, satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 869,
    "result": {
      "judgement": "Predicted query correctly finds the constructor with max points in race 9 and returns its URL, matching gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 758,
    "result": {
      "judgement": "Predicted query filters race='human' lowercase, yielding no rows, so it fails to return the hair colours of 185-cm human superheroes, whereas gold returns correct colours.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1058,
    "result": {
      "judgement": "Prediction returns the specific player (name) with the highest average finishing among all tallest and shortest players, while gold returns whether the taller or shorter group wins; the wording \"Who\" allows either reading, so prediction is a valid answer under an alternative interpretation.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 879,
    "result": {
      "judgement": "Predicted query correctly selects nationality of driver(s) whose fastestLapSpeed equals the overall maximum, matching the intent despite possible duplicate rows.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1079,
    "result": {
      "judgement": "Prediction correctly returns the tallest player using height order, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 892,
    "result": {
      "judgement": "Predicted query correctly joins drivers to driverStandings and returns the driver-name row with the maximum points, satisfying the request; extra join in gold is unnecessary but harmless.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 766,
    "result": {
      "judgement": "Predicted query uses lowercase 'strength', which fails to match the stored attribute name 'Strength' and returns no row, so it does not answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1091,
    "result": {
      "judgement": "Predicted query applies the correct league filter and April-2009 date constraints, matching the question’s intent just like the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 785,
    "result": {
      "judgement": "Predicted query matches requirements and is identical to gold, retrieving superhero names with Neutral alignment.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 798,
    "result": {
      "judgement": "Prediction matches gold and correctly retrieves the publishers of the three specified superheroes.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 819,
    "result": {
      "judgement": "Prediction matches the question requirements, using eye_colour_id values directly instead of join but equivalent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1098,
    "result": {
      "judgement": "Prediction still retrieves Ajax’s highest chanceCreationPassing value and its class without unjustified filters, matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 954,
    "result": {
      "judgement": "Predicted query matches question intent; counting driverId vs raceId is equivalent, no unwarranted filters added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 865,
    "result": {
      "judgement": "Predicted query correctly selects the oldest finishing driver of race 592; missing NOT NULL on dob is benign and not explicitly required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 962,
    "result": {
      "judgement": "Predicted query counts individual lapTimes rows, not drivers, so denominator/numerator measure laps rather than drivers, violating the question which asks for percentage of drivers; gold uses driver-level result rows and is reasonable.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 872,
    "result": {
      "judgement": "Predicted query uses an exact match to a time string that does not exist in the data, yielding no result, while the gold query correctly matches the intended 1:33-xxx Q3 time and returns the driver code.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1130,
    "result": {
      "judgement": "Predicted query correctly selects team short names whose chanceCreationPassingClass is 'Safe'; duplicates do not violate the question’s requirement, so semantics match the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 669,
    "result": {
      "judgement": "Predicted query correctly retrieves the earliest vote date for user 'chl' just like the gold, with no missing or extra conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 880,
    "result": {
      "judgement": "Predicted query correctly computes the percentage difference between Paul di Resta’s fastest-lap speeds in race 853 and race 854, matching the question requirements with no unjustified filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 898,
    "result": {
      "judgement": "Predicted query matches gold logic except for column order, correctly returns name and age of youngest Japanese driver.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 989,
    "result": {
      "judgement": "Prediction correctly returns champion Robert Kubica and his finish time for the 2008 Canadian Grand Prix, matching the question; gold omits the driver so is incomplete.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1146,
    "result": {
      "judgement": "Predicted query correctly returns the team_long_name of the away side in the match with the highest away_team_goal, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1002,
    "result": {
      "judgement": "Predicted query picks the youngest driver correctly but does not ensure the race returned is the driver’s first race, as required; it arbitrarily selects one of many races (same flaw as gold).",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1025,
    "result": {
      "judgement": "Predicted query correctly identifies the league with the highest total goals in the 2015/2016 season; no extra or missing filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1150,
    "result": {
      "judgement": "Predicted query correctly computes the share of female patients born after 1930; COUNT(ID) equals COUNT(*) since ID is non-null primary key, so logic matches gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 683,
    "result": {
      "judgement": "Predicted denominator restricts to 2011 posts, but evidence demands denominator be all posts; thus prediction miscomputes required percentage while gold follows spec.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1032,
    "result": {
      "judgement": "Predicted query correctly identifies a league with the joint-maximum number of matches (3040) and provides its name and count, satisfying the question despite ties, just like the gold.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 704,
    "result": {
      "judgement": "Prediction returns the excerpt and wiki post IDs for tag 'sample' exactly as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1039,
    "result": {
      "judgement": "Prediction computes the average long_shots for the specified player using an equivalent join and count column, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 977,
    "result": {
      "judgement": "Predicted query incorrectly includes races 50 and 100 despite evidence specifying raceId > 50 and raceId < 100, violating an explicit range requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1048,
    "result": {
      "judgement": "Predicted query uses a scalar subquery instead of a join but applies the same name filter and year filter to retrieve 2011 overall_rating, so it meets the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1192,
    "result": {
      "judgement": "Predicted query matches all stated conditions using an equivalent date filter, so it correctly answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 716,
    "result": {
      "judgement": "Prediction correctly computes percentage of joined comment rows whose users have zero up-votes, matching the evidence formula and question scope; no unwarranted predicates are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 724,
    "result": {
      "judgement": "Prediction correctly lists superhero names with blue eyes and blond hair, matching the question and gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 732,
    "result": {
      "judgement": "Prediction matches requirements; finds publisher of min speed, same as gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1003,
    "result": {
      "judgement": "Predicted query correctly counts accidents for each driver in all Canadian Grand Prix races with statusId=3 and returns the maximum count, matching gold logic and meeting the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1103,
    "result": {
      "judgement": "Prediction uses exact timestamp instead of substring but still returns correct overall rating under typical data; no extraneous or missing filters detected.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1113,
    "result": {
      "judgement": "Predicted query satisfies the question by matching the team and the specified date, using an equality that is functionally equivalent since data rows are stored at midnight.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1029,
    "result": {
      "judgement": "Predicted query selects the highest build-up play speeds (and their teams), matching the request for the top-4 teams, whereas the gold query takes the lowest speeds, contradicting the question; despite possible duplicate-team concerns, the prediction follows the clear ‘highest’ requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 772,
    "result": {
      "judgement": "Predicted query correctly lists colour names for eye, hair, and skin for female superheroes from Dark Horse Comics and satisfies all constraints; no substantive error found.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1312,
    "result": {
      "judgement": "Prediction correctly retrieves Angela Sanders’s major via first and last name join with major table, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1035,
    "result": {
      "judgement": "Prediction matches the requested condition; duplicates are benign representation differences.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1122,
    "result": {
      "judgement": "Pred query still returns the player(s) with the highest overall_rating; extra duplicate rows do not violate the request for the name, so it satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 781,
    "result": {
      "judgement": "Prediction correctly filters by amber eye colour and includes the requested heights; the extra name column does not invalidate the answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1331,
    "result": {
      "judgement": "Predicted query reasonably interprets the question as asking for the total amount and only differs by aggregating with SUM, which does not violate any explicit requirement.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 801,
    "result": {
      "judgement": "Predicted query correctly counts male (id=1) and female (id=2) superheroes and divides, matching the gold logic and fulfilling the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 824,
    "result": {
      "judgement": "Predicted query correctly lists superhero names with the 'Wind Control' power and orders them alphabetically, matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1340,
    "result": {
      "judgement": "Predicted query computes the same year-wise sums and subtracts 2019 − 2020 correctly; extra FROM budget only duplicates the identical scalar, which does not alter the answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1040,
    "result": {
      "judgement": "Predicted query correctly filters players taller than 180 cm, computes each player’s average heading accuracy, orders it descending, and returns the first 10 names; extra column is harmless and the different join key still respects the schema.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1351,
    "result": {
      "judgement": "Predicted query matches gold and correctly retrieves Brent Thomason’s major via name filter and join.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1057,
    "result": {
      "judgement": "Predicted query applies same filters for Poland and 2010/2011 and correctly computes average home team goals with AVG, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1078,
    "result": {
      "judgement": "Predicted query correctly filters the two players and returns the one with the earliest birthday (older), matching the question and the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 850,
    "result": {
      "judgement": "Prediction correctly joins races with circuits filtered to country Germany; duplicates are acceptable since question did not request distinct, so prediction answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1359,
    "result": {
      "judgement": "Predicted query computes the required Advertisement budget ratio between the two named events; absence of an explicit type='Meeting' filter does not violate the question wording, so semantics are satisfied.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1380,
    "result": {
      "judgement": "Predicted query exactly matches the required filter and aggregation for total food spending.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1392,
    "result": {
      "judgement": "Predicted query properly groups by source and orders by total amount to find the highest-earning source in Sept 2019, while the gold query ignores amount, so prediction is correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1409,
    "result": {
      "judgement": "Predicted SQL matches the required sum of costs for 2019-08-20 exactly and aligns with the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1426,
    "result": {
      "judgement": "Predicted query selects last name, department, and college for every member whose major is Environmental Engineering, satisfying the question; the gold adds an unwarranted position filter, so prediction is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1144,
    "result": {
      "judgement": "Predicted query correctly joins to Player, identifies the heaviest weight, and returns finishing and curve values; this satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1096,
    "result": {
      "judgement": "Prediction correctly computes the average overall_rating for the player named Pietro Marino with appropriate join and no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1457,
    "result": {
      "judgement": "Prediction lists the correct member names and phones for those with expenses above the overall average; duplicates do not violate the question’s wording, so it satisfies the requirement like the gold (which just adds DISTINCT).",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1105,
    "result": {
      "judgement": "Predicted query correctly fetches Francesco Migliore’s attacking_work_rate on 2015-05-01; using exact timestamp 00:00:00 is acceptable since dataset dates are stored at midnight.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1153,
    "result": {
      "judgement": "Prediction returns the diagnosis and every lab test date for patient 30609 as asked, matching the gold exactly.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 868,
    "result": {
      "judgement": "Prediction returns the correct latitude and longitude, only with duplicate rows that do not violate the question’s requirement of supplying the coordinates",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 877,
    "result": {
      "judgement": "Prediction matches the question requirements exactly, equivalent to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1114,
    "result": {
      "judgement": "Predicted query correctly averages Marko Arnautovic’s overall ratings within the specified date range using an equivalent join and time filter.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1169,
    "result": {
      "judgement": "Predicted query applies the same sex-specific UA thresholds and computes the male/female ratio exactly as requested, matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1187,
    "result": {
      "judgement": "Predicted query correctly returns the distinct patient IDs satisfying the date and lab value conditions; the extra join to Patient does not alter the result.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1198,
    "result": {
      "judgement": "Predicted query correctly counts female patients with APS; COUNT(*) vs COUNT(ID) is equivalent since ID is non-null primary key.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 884,
    "result": {
      "judgement": "Predicted query correctly selects races whose year-month equals the year-month of the minimum date, satisfying the question’s requirement; no extraneous or missing filters compared to gold, just a more compact formulation.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1209,
    "result": {
      "judgement": "Prediction applies GPT>60 filter, joins to Patient, and orders by Birthday ascending, delivering diagnoses; duplicates are permissible for such list questions, so it satisfies the request.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 896,
    "result": {
      "judgement": "Predicted query reasonably computes the requested percentage using race-results data; the difference from gold stems from the question’s ambiguity over race finish versus championship standing, not a clear error.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1480,
    "result": {
      "judgement": "Predicted query extracts month starting at 6th character, collapsing months 01&11 etc., so aggregates by wrong groups and can yield wrong peak; gold uses correct 5th–6th characters.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1238,
    "result": {
      "judgement": "Predicted query correctly filters SLE patients with normal hemoglobin and picks the oldest by birthday, returning ID and sex as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 912,
    "result": {
      "judgement": "Prediction retrieves the circuitRef for the specified circuit exactly as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 931,
    "result": {
      "judgement": "Predicted query correctly computes the maximum fastestLapSpeed for the 2009 Spanish Grand Prix using equivalent logic to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1498,
    "result": {
      "judgement": "Prediction takes max of individual customer-month records, but the question implies finding the month whose total consumption (sum over customers) is highest, so prediction underestimates and is wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1506,
    "result": {
      "judgement": "Prediction satisfies the query: lists distinct product descriptions for transactions at gas stations where Country = 'CZE'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1515,
    "result": {
      "judgement": "Predicted query matches gold and correctly fetches the customer segment at the specified date-time.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1136,
    "result": {
      "judgement": "Prediction counts rows instead of distinct players, so it may over-count when a player has multiple attribute records; the question asks for number of players, requiring DISTINCT.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1526,
    "result": {
      "judgement": "Prediction uses 2012-08-24 instead of the explicitly asked 2012-08-25 date, so it violates a clear requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1265,
    "result": {
      "judgement": "Predicted query correctly filters RNP values '-' or '+-' and Admission='+', using DISTINCT, while gold omits parentheses causing wrong logic and uses non-specified RNP literals; prediction aligns with question, gold does not.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1281,
    "result": {
      "judgement": "Predicted query correctly returns the largest Birthday for patients with GOT >= 60, matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1346,
    "result": {
      "judgement": "Predicted query correctly retrieves Carlo Jacobs’ phone number using matching first and last name, satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1356,
    "result": {
      "judgement": "Predicted query exactly matches gold and correctly retrieves the department of the club member whose position is President.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1533,
    "result": {
      "judgement": "Prediction satisfies all specified conditions, returning each qualifying customer’s August-2012 consumption; extra CustomerID column is acceptable and results match semantic intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1362,
    "result": {
      "judgement": "Prediction filters county='Orange' instead of 'Orange County', yielding 0 cities, so it fails to answer the question correctly; gold is plausible.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1376,
    "result": {
      "judgement": "Predicted query correctly joins events with budgets, restricts to closed events, orders by spent/amount ratio descending, and returns the top event, matching the question’s intent; no unjustified filters added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 951,
    "result": {
      "judgement": "Predicted query outputs the per-constructor row count (always 2) instead of the number of constructors, so it fails to answer “how many constructors…”.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1398,
    "result": {
      "judgement": "Predicted query correctly retrieves the event with the greatest advertising spend using equivalent join and ordering logic as the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 960,
    "result": {
      "judgement": "Prediction matches required filter and computes the requested average; no extraneous predicates added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 971,
    "result": {
      "judgement": "Predicted query correctly selects German drivers and returns the earliest dob via ORDER BY dob ASC LIMIT 1; date string ordering is sufficient, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1411,
    "result": {
      "judgement": "Prediction correctly lists expense_description values for member Sacha Harrison, satisfying the question without extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 981,
    "result": {
      "judgement": "Predicted query correctly identifies the youngest driver via MAX(dob) and returns the earliest (first) qualifying race with year, name, date and time, matching the question’s intent; any difference with gold is a benign tie-handling choice.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1164,
    "result": {
      "judgement": "Predicted query counts distinct female patients with thrombosis level 1 in 1997, fully matching the question; DISTINCT is benign or beneficial.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1001,
    "result": {
      "judgement": "Predicted query correctly selects the 2008 Marina Bay qualifying record whose overall qualifying position is 1, which corresponds to the top Q3 performer, fulfilling the request for the racer ranked first in that session; no unwarranted filters are added, so the Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1432,
    "result": {
      "judgement": "Predicted query applies correct filters and computes the same ratio as the gold (numerator identical; denominator counts the joined rows, matching gold), thus meets question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1464,
    "result": {
      "judgement": "Prediction satisfies the request by listing each student’s first and last name together with the amount for 2019-09-09; no unwarranted filters are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1171,
    "result": {
      "judgement": "Prediction counts distinct under-age patient IDs within 1990-1993, matching the request for number of patients, whereas the gold counts examination rows; prediction therefore satisfies the query semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1476,
    "result": {
      "judgement": "Predicted query correctly filters 2012 data, segregates by currency, and subtracts CZK sum from EUR sum per the stated definition, matching the intended answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1031,
    "result": {
      "judgement": "Predicted query satisfies sprint speed and date conditions and computes current age; extra columns and duplicates do not violate question wording.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1044,
    "result": {
      "judgement": "Predicted SQL correctly filters players born in 1970 and month 10, matching the question’s requirement; no unjustified predicates are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1490,
    "result": {
      "judgement": "Predicted query counts joined rows instead of distinct LAM customers, violating the explicit customer-level percentage definition.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1501,
    "result": {
      "judgement": "Predicted query filters transaction dates with SUBSTR = '201306', but the stored Date format includes a dash so no rows match, yielding empty answer; thus it fails to list the required countries.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1068,
    "result": {
      "judgement": "Predicted query correctly averages overall_rating for 2010-2015 rows with height >170, properly ignoring NULL ratings, whereas gold divides by all rows (including NULLs); prediction satisfies question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1189,
    "result": {
      "judgement": "Pred query reasonably counts distinct patients and uses the overall average, a valid interpretation of the stated question; the divergence from the gold (row-count and subgroup average) stems from ambiguity rather than error.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1080,
    "result": {
      "judgement": "Predicted query counts attribute rows instead of distinct players, so it can over-count and does not satisfy the explicit \"how many players\" requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1201,
    "result": {
      "judgement": "Predicted query correctly computes female percentage among 1980-born RA patients; using COUNT(SEX) instead of COUNT(ID) is benign given no stated nulls and identical result.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1509,
    "result": {
      "judgement": "Prediction uses proper strict date filter and counts Czech transactions; no explicit requirement violated, so uphold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1092,
    "result": {
      "judgement": "Predicted query correctly identifies a league with the maximal match count for the 2008/2009 season; returning one league via LIMIT 1 is acceptable since tie-handling is unspecified.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1220,
    "result": {
      "judgement": "Predicted query retrieves the same patients (UN = 29) as the gold with identical columns; lack of DISTINCT only adds harmless duplicates and does not violate the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1231,
    "result": {
      "judgement": "Predicted query meets all stated conditions with equivalent logic to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1255,
    "result": {
      "judgement": "Predicted query matches gold logic, correctly finds the diagnosis with highest count among patients whose IgM is outside 40-400; no extraneous or missing filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1133,
    "result": {
      "judgement": "Predicted query correctly counts players named Aaron with birthday after 1990 per provided evidence; no extra or missing predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1302,
    "result": {
      "judgement": "Counting distinct patient IDs fits the request for “patients”, whereas the gold query may double-count the same patient due to multiple lab/exam records; the prediction therefore matches the semantics and the gold does not.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1323,
    "result": {
      "judgement": "Predicted query omits the requirement to exclude fundraiser events, so it may return fundraiser events, violating the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1147,
    "result": {
      "judgement": "Predicted query correctly returns a player with the maximum overall_rating and thus satisfies the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1339,
    "result": {
      "judgement": "Predicted query matches all explicit requirements, just using a scalar subquery instead of a join; no unjustified predicates added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1152,
    "result": {
      "judgement": "Predicted query computes counts of SLE patients with '+' and '-' admissions and divides them, matching the requested ratio.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1157,
    "result": {
      "judgement": "Predicted query correctly returns the requested columns for all patients whose thrombosis value equals 2; absence of DISTINCT may yield duplicates but duplicates are acceptable for a simple 'list' request.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1357,
    "result": {
      "judgement": "Predicted query matches the question requirements, using the correct join, member name filters, and source='Dues' to return date_received; no extraneous conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1368,
    "result": {
      "judgement": "Predicted query correctly joins member to major and filters by the given phone number, returning the matching major_name just like the gold; no requirements are violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1179,
    "result": {
      "judgement": "Predicted query correctly picks the patient by SLE diagnosis and description date, filters the examination on 1993-11-12, and returns the requested aCL IgM concentration, fully answering the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1195,
    "result": {
      "judgement": "Predicted query satisfies all stated conditions (female sex, PLT>400, SLE diagnosis) and computes AVG(ALB), matching the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1405,
    "result": {
      "judgement": "Predicted query lists amount per row without summing despite evidence requiring SUM(amount) per category, violating explicit aggregation requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1208,
    "result": {
      "judgement": "Prediction matches the required filters and returns IDs of male patients whose GPT readings ever reached ≥60, satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1227,
    "result": {
      "judgement": "Predicted SQL matches gold logic and satisfies question requirements; any per-patient vs per-lab duplication issue is inherent in both and stems from ambiguous wording.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1422,
    "result": {
      "judgement": "Predicted query reasonably returns the event types (Meeting, Election, Guest Speaker) held at MU 215, a valid reading of “category of events,” therefore it cannot be judged wrong despite differing from gold.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1435,
    "result": {
      "judgement": "Predicted query satisfies all filters; duplicates are acceptable since the prompt didn’t request distinct names.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1471,
    "result": {
      "judgement": "Predicted query computes the desired EUR-to-CZK customer count ratio exactly like gold, differing only in cast type name and alias.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1483,
    "result": {
      "judgement": "Predicted query correctly sums consumption for customer 6 in 2013-08 through 2013-11, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1493,
    "result": {
      "judgement": "Prediction matches gold logic and satisfies the question’s requirements; no unjustified predicates or omissions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1514,
    "result": {
      "judgement": "Prediction correctly filters by date and time and returns the currency (CZK), duplicates notwithstanding.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1242,
    "result": {
      "judgement": "Predicted query satisfies all stated constraints (1984 exams, PLT 100-400, age<50 per given evidence) and returns patient info, so it is acceptable despite duplicates and differing age reference.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1334,
    "result": {
      "judgement": "Prediction matches the gold and correctly returns members whose zip code is in Illinois.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1344,
    "result": {
      "judgement": "Prediction exactly matches the required filters and columns for the asked fundraising record, aligning with gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1361,
    "result": {
      "judgement": "Predicted query matches gold and satisfies the stated requirement to sum pizza costs across all events.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1375,
    "result": {
      "judgement": "Prediction lists first and last names of members whose majors belong to the specified department; logic is equivalent to gold with tables reversed and no extra filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1381,
    "result": {
      "judgement": "Predicted query correctly counts events per member and returns first and last names for members with more than 7 attendances, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1394,
    "result": {
      "judgement": "Predicted query correctly joins member to major and counts all rows where major_name is 'Physics Teaching', matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1525,
    "result": {
      "judgement": "Prediction counts transactions rather than distinct customers, so it computes the percentage of EUR transactions, not percentage of customers, violating the question requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1403,
    "result": {
      "judgement": "Predicted query satisfies the stated need by finding the closed event (using event.status) with the most-negative remaining budget, matching evidence; differing only in which status column is referenced, a plausible schema ambiguity.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1410,
    "result": {
      "judgement": "Prediction matches gold and satisfies request for member’s first & last name with summed costs; no unjustified filters added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1427,
    "result": {
      "judgement": "Predicted query selects the same categories satisfying MU 215, Guest Speaker, and spent=0; duplicates are harmless and question did not demand uniqueness, so semantics align with intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1460,
    "result": {
      "judgement": "Predicted query correctly returns the member’s first and last name and the cost for the specified expense description, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1473,
    "result": {
      "judgement": "Predicted query filters SME customers and 2013 months then divides average by 12, matching question intent same as gold via equivalent BETWEEN versus SUBSTR logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1486,
    "result": {
      "judgement": "Prediction uses literal values 'Czech koruna' and 'Euro' that do not exist in the Currency column, yielding zero and giving wrong difference, whereas gold uses correct codes and logic.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1507,
    "result": {
      "judgement": "Predicted query correctly lists distinct transaction times for gas stations belonging to chain 11, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1521,
    "result": {
      "judgement": "Predicted query satisfies all stated date, time, and country conditions and counts matching transactions, same as gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1528,
    "result": {
      "judgement": "Predicted query uses lowercase 'premium', yielding zero matches and 0%, failing to compute the actual premium share for SVK; gold query matches intent and casing.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  }
]