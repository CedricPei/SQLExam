[
  {
    "question_id": 637,
    "result": {
      "sql_diff": "Pred joins posts to tags table via LIKE to get distinct TagName 'books'; Gold selects posts.Tags strings (<books>, duplicates, one NULL).",
      "logic_diff": "Both queries ultimately identify the only real tag Mark Meckes used ('books'); gold emits duplicates/NULL while pred returns clean distinct tag list.",
      "reason": "Prediction satisfies the question by returning the single tag used and omits irrelevant NULL/duplicates, so no core conflict.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 1389,
    "result": {
      "sql_diff": "Gold orders by cost and LIMIT 1, returning a single event; prediction filters where cost equals the global MIN(cost), returning three events tied for that minimum.",
      "logic_diff": "Both queries identify event(s) whose expense cost is the lowest, but prediction keeps all ties while gold arbitrarily picks one.",
      "reason": "Returning all events that share the lowest cost is a reasonable interpretation of the singular question, so the divergence is due to tie-handling ambiguity rather than an error.",
      "verdict": false,
      "tag": "AMBIGUOUS_QUESTION"
    }
  },
  {
    "question_id": 1493,
    "result": {
      "sql_diff": "Pred uses DATE LIKE '201202%' and COUNT(DISTINCT CustomerID) while gold uses Date='201202' and COUNT(CustomerID); also pred filters consumption count with CASE WHEN DISTINCT.",
      "logic_diff": "Both compute (customers with Consumption>528.3) / (total customers) for Feb-2012; distinct vs non-distinct is immaterial since each customer-month row is unique.",
      "reason": "Differences are minor and do not violate the query intent, giving identical results.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 1044,
    "result": {
      "sql_diff": "Pred adds condition player_name IS NOT NULL and uses strftime to separately filter year='1970' and month='10'; gold uses SUBSTR to compare '1970-10' without extra null check.",
      "logic_diff": "Both identify players born in 1970-10, but pred excludes any such players whose name field is NULL, an additional constraint absent from the question and gold.",
      "reason": "The unnecessary NOT NULL filter narrows the result set beyond the question’s scope, constituting an unjustified restriction.",
      "verdict": true,
      "tag": "CORE_CONFLICT"
    }
  },
  {
    "question_id": 1275,
    "result": {
      "sql_diff": "Pred uses CENTROMEA/SSB IN ('-', '+-'); gold uses IN ('negative', '0'); pred result 0 vs gold 1.",
      "logic_diff": "Pred only recognises '-' or '+-' as normal, so omits patients coded as 'negative' or '0', giving an incorrect male count.",
      "reason": "Predicted query returns a different, incorrect count because it fails to cover the actual normal-value codes present in the data.",
      "verdict": true,
      "tag": "CORE_CONFLICT"
    }
  },
  {
    "question_id": 1243,
    "result": {
      "sql_diff": "Pred uses WHERE PT>=14 and counts rows with PT>=14; Gold puts PT>=14 inside CASE but sets ELSE 0 so COUNT counts every row, giving much larger denominator and different result.",
      "logic_diff": "Pred calculates share of females among abnormal-PT patients aged>55, while Gold divides by all test rows for aged>55, not just abnormal, so answers different question.",
      "reason": "Gold mis-implements denominator; prediction aligns with question requirements, so Prover's pass stands.",
      "verdict": false,
      "tag": "GOLD_FAULT"
    }
  },
  {
    "question_id": 1426,
    "result": {
      "sql_diff": "Gold adds filter position = 'Member'; prediction omits this filter, otherwise joins and selected columns align.",
      "logic_diff": "Gold restricts to members whose position literal is 'Member', whereas prediction returns all persons linked to the major regardless of position.",
      "reason": "The question just says \"members\" without specifying a position value, so excluding the position filter is a reasonable interpretation.",
      "verdict": false,
      "tag": "AMBIGUOUS_QUESTION"
    }
  },
  {
    "question_id": 459,
    "result": {
      "sql_diff": "Gold orders the two cards by convertedManaCost desc and takes the first; Pred uses CASE comparing the two mana costs and returns corresponding name.",
      "logic_diff": "Both return the card with the higher convertedManaCost; difference only in tie-handling (gold arbitrary, pred defaults to Shrine Keeper) which is irrelevant unless costs equal.",
      "reason": "Prediction correctly identifies the higher-cost card under normal reading of the question and aligns with gold intent.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 1376,
    "result": {
      "sql_diff": "Pred adds condition T2.amount > 0 and orders by spent/amount on budget alias whereas gold has no amount>0 filter but otherwise identical joins, filter Closed, order desc, limit 1; results reported identical.",
      "logic_diff": "Both queries pick the closed event with the maximum spend-to-budget ratio; additional positive-amount filter just guards divide-by-zero without changing outcome here.",
      "reason": "Extra non-essential filter does not violate the question’s requirement and yields same result, so prediction remains acceptable.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 785,
    "result": {
      "sql_diff": "Queries are effectively identical; same tables, joins, filter, and selected column.",
      "logic_diff": "Both return superhero_name for heroes whose alignment is 'Neutral', fully answering the question.",
      "reason": "Prediction matches the required logic with no extraneous conditions.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 1356,
    "result": {
      "sql_diff": "Queries are identical aside from formatting/quoting; results match.",
      "logic_diff": "Both retrieve the department(s) of club member(s) whose position is 'President'.",
      "reason": "Prediction satisfies the question exactly with no extraneous conditions.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 544,
    "result": {
      "sql_diff": "Prediction adds redundant condition LastEditorUserId IS NOT NULL; otherwise identical.",
      "logic_diff": "Both queries fetch the display name of the user matching LastEditorUserId for the specified post title.",
      "reason": "Extra null check does not change result or violate requirements, so prediction is acceptable.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 937,
    "result": {
      "sql_diff": "Pred filters results where position = 2; Gold filters where rank = 2; returned times differ (+14.925 vs +16.445).",
      "logic_diff": "Pred gives finish time of the driver who finished second; Gold gives time for driver with second-best fastest-lap rank, not necessarily overall second place.",
      "reason": "Gold misuses the rank column, whereas prediction correctly targets finishing position, so the Prover’s pass stands.",
      "verdict": false,
      "tag": "GOLD_FAULT"
    }
  },
  {
    "question_id": 1505,
    "result": {
      "sql_diff": "Pred counts DISTINCT customers (391) whereas gold counts all qualifying rows (2730).",
      "logic_diff": "Pred returns number of customers with any month over 1000 EUR; gold returns number of customer-month records over 1000 EUR.",
      "reason": "Question asks \"how many customers\", so distinct-customer count is appropriate and gold overcounts.",
      "verdict": false,
      "tag": "GOLD_FAULT"
    }
  },
  {
    "question_id": 1501,
    "result": {
      "sql_diff": "Pred uses SUBSTR filters on ym.Date while gold directly compares to '201306'; otherwise joins and selected columns are identical.",
      "logic_diff": "Both queries fetch distinct gas station countries tied to customers who have a yearmonth record for June-2013, without further logical deviation.",
      "reason": "Differences are purely stylistic and yield the same semantics and result set.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 1361,
    "result": {
      "sql_diff": "Pred adds alias `AS total_pizza_cost`; otherwise identical to gold.",
      "logic_diff": "Both compute SUM(cost) where expense_description = 'Pizza', answering the question.",
      "reason": "Predicted query is semantically equivalent to gold with only a harmless alias difference.",
      "verdict": false,
      "tag": "NA"
    }
  },
  {
    "question_id": 1239,
    "result": {
      "sql_diff": "Pred: filters candidates in derived table of Laboratory then joins Patient; Gold: joins Patient-Laboratory then filters via IN subquery; age calculation uses 'now' vs CURRENT_TIMESTAMP; results identical.",
      "logic_diff": "Both queries return each patient ID with age where patient has >=2 lab records with HCT >=52.",
      "reason": "Predicted SQL logically matches the requirement and gold result despite minor structural differences.",
      "verdict": false,
      "tag": "NA"
    }
  }
]