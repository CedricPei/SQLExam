[
  {
    "question_id": 1473,
    "result": {
      "judgement": "Prediction matches the gold in logic and fulfills the question requirements; no violations found.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1480,
    "result": {
      "judgement": "Prediction faithfully filters SME customers in 2013, groups by month, orders by total consumption, and returns the peak month just like the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1471,
    "result": {
      "judgement": "Prediction correctly computes the ratio of EUR-paying customers to CZK-paying customers with no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1479,
    "result": {
      "judgement": "Prediction correctly filters CZK records, sums consumption per year, orders by the sum descending, and returns the top year, satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1507,
    "result": {
      "judgement": "Predicted query matches gold and correctly lists distinct transaction times for chain 11 gas stations.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1483,
    "result": {
      "judgement": "Predicted query properly sums consumption for customer 6 over months 201308-201311 using the month component, satisfying the question; no unjustified filters are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1498,
    "result": {
      "judgement": "Predicted query only finds the maximum single customer-month consumption, but the question asks for the highest total consumption of any month in 2012, which requires summing by month; therefore the prediction is incorrect while the gold is correct.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1515,
    "result": {
      "judgement": "Prediction matches gold logic; date/time filter and join are correct, no extra predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1505,
    "result": {
      "judgement": "Prediction correctly counts distinct euro customers with consumption over 1000, while gold wrongly counts months, so gold is incorrect.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1331,
    "result": {
      "judgement": "Predicted query sums the amounts but the question’s wording reasonably supports asking for the total, so no clear violation exists.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1490,
    "result": {
      "judgement": "Predicted query counts distinct LAM customers in numerator and denominator, matching the evidence formula, while gold double-counts customers via the join, so prediction is correct and gold is faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1484,
    "result": {
      "judgement": "Predicted query filters Segment='discount' (lower-case), missing the actual 'Discount' rows, yielding zero instead of the required 176 difference, so it does not answer the question correctly.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1501,
    "result": {
      "judgement": "Predicted query filters on a malformed date substring, returning no rows, so it fails to list any countries for June 2013.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1351,
    "result": {
      "judgement": "Predicted query correctly joins member to major and filters by first and last name, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1509,
    "result": {
      "judgement": "Predicted query correctly counts Czech transactions with a strict date > 2012-01-01, matching the “after 2012/1/1” wording, and adds no unjustified filters; differences from gold are minor and acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1514,
    "result": {
      "judgement": "Predicted SQL correctly filters by the specified date and time and retrieves the currency, with duplicates being a benign difference from the gold DISTINCT.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1371,
    "result": {
      "judgement": "Predicted query correctly counts members for the specified event; DISTINCT is benign and does not violate requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1344,
    "result": {
      "judgement": "Prediction matches the required filters and correctly returns the notes for the fundraising on 2019-09-14.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1506,
    "result": {
      "judgement": "Predicted query correctly retrieves product descriptions for transactions at Czech gas stations; extra DISTINCT in gold only removes duplicates, which the question does not require.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1361,
    "result": {
      "judgement": "Prediction sums cost for expenses with description 'Pizza', fully answering the question just like gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1322,
    "result": {
      "judgement": "Prediction correctly counts events with >10 attendees that are of type 'Meeting', while gold lists non-meeting events, so prediction aligns with the question and gold is wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1390,
    "result": {
      "judgement": "Predicted query correctly computes the Yearly Kickoff cost as a share of total expenses (only difference is harmless rounding); it matches the question and schema.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1334,
    "result": {
      "judgement": "Predicted query correctly joins member with zip_code, filters state='Illinois', and outputs concatenated first and last names, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1533,
    "result": {
      "judgement": "Prediction correctly filters by unit price >29 for product 5 and outputs the August-2012 consumption; extra columns are harmless.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1405,
    "result": {
      "judgement": "Predicted query correctly lists each category with its summed budget for the 'April Speaker' event and orders by that sum ascending, matching question intent and gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1339,
    "result": {
      "judgement": "Predicted query matches all specified conditions and computes the same average cost as required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1346,
    "result": {
      "judgement": "Prediction matches the question, selecting the phone of the member whose first and last names are Carlo and Jacobs, identical to gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1531,
    "result": {
      "judgement": "Predicted query sums unit prices instead of total spending (price*amount) so mis-identifies the top spender and miscomputes average price; it violates explicit average formula, so it is incorrect.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1352,
    "result": {
      "judgement": "Prediction matches intent; DISTINCT is harmless because member_id is unique primary key.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1381,
    "result": {
      "judgement": "Predicted query correctly lists each student whose attendance count exceeds 7, presenting their full name via concatenation, which satisfies the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1357,
    "result": {
      "judgement": "Prediction matches the gold and correctly retrieves Connor Hilton's dues payment date.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1435,
    "result": {
      "judgement": "Predicted query matches requirements; duplicates are acceptable for a simple list, so it correctly answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1375,
    "result": {
      "judgement": "Prediction lists every member from the specified department, correctly joining member and major tables and returning their full names, satisfying the question; only formatting differs from gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1401,
    "result": {
      "judgement": "Predicted query reasonably answers by providing total poster cost; aggregation vs item-level is acceptable given singular wording; no requirements violated.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1378,
    "result": {
      "judgement": "Predicted query correctly retrieves the maximum spend just like the gold; no requirements violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1500,
    "result": {
      "judgement": "Predicted query filters t.Date with SUBSTR = '201309', which mismatches date format and returns no rows, so it does not list any product descriptions for Sept-2013; therefore it fails the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1362,
    "result": {
      "judgement": "Predicted query filters by county = 'Orange' which yields 0 rows, while the question specifies 'Orange County'; thus it fails to count the cities and gives the wrong answer.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1338,
    "result": {
      "judgement": "Predicted query returns no expenses because it matches event_date exactly, unlike gold which correctly retrieves the expenses, so prediction fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1398,
    "result": {
      "judgement": "Predicted query correctly retrieves the event with the highest advertisement spending, matching the intended filtering and ordering.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1521,
    "result": {
      "judgement": "Predicted SQL matches gold in filtering by date, time interval, and country CZE and counts transactions, so it fully answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1323,
    "result": {
      "judgement": "Predicted query correctly filters non-fundraiser events with attendance >20 and projects event_name; casing and DISTINCT differences do not break the requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1392,
    "result": {
      "judgement": "Predicted query correctly picks the source with the greatest total amount in Sept-2019, while the gold just takes the lexicographically largest source; so prediction satisfies the question and gold is faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1426,
    "result": {
      "judgement": "Predicted query fulfils the question by listing last names of all member records whose major is Environmental Engineering along with their department and college; requirement to filter by position='Member' is not explicit, so the absence of that predicate is acceptable.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1409,
    "result": {
      "judgement": "Prediction matches the gold logic: sums cost where date is 2019-08-20, fulfilling the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1312,
    "result": {
      "judgement": "Prediction answers the question exactly with correct join and filters; no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1350,
    "result": {
      "judgement": "Prediction returns event.status but evidence explicitly says event status is in budget.event_status, so required column is wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1411,
    "result": {
      "judgement": "Predicted query correctly lists the expense descriptions for Sacha Harrison; removing duplicates is acceptable for naming the kinds of expenses.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1155,
    "result": {
      "judgement": "Predicted query correctly selects patient ID, sex and birthday for every lab record where LDH exceeds 500; duplicates are harmless for a “list” request, so it satisfies the question just as the gold does.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1150,
    "result": {
      "judgement": "Prediction matches intent; it filters female patients, computes share born after 1930, differing only by rounding.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1340,
    "result": {
      "judgement": "Predicted query correctly computes sum spent for 2019 minus sum for 2020 using the same join and year extraction logic as required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1403,
    "result": {
      "judgement": "Predicted query correctly finds the closed event (event.status = 'Closed') with the most negative remaining budget and is semantically equivalent to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1368,
    "result": {
      "judgement": "Predicted SQL correctly joins member to major and filters by the given phone number to return the major name, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1427,
    "result": {
      "judgement": "Predicted query correctly lists distinct budget categories for events at MU 215 of type 'Guest Speaker' with zero spent, matching the question requirements; omission of the redundant type column is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1376,
    "result": {
      "judgement": "Prediction picks the closed event with the greatest spent/amount ratio (handling possible multiple budget rows per event) and returns that event, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1380,
    "result": {
      "judgement": "Predicted query matches gold semantics, summing spent where category is Food.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1457,
    "result": {
      "judgement": "Predicted query demands every expense of a member exceed the average, returning none, while the question/evidence only requires expenses (cost) > AVG(cost) and gold returns appropriate members; thus prediction is overly restrictive and incorrect.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1189,
    "result": {
      "judgement": "Pred query uses overall AVG and distinct patients, both reasonable since question does not state the average subset and asks for “number of patients”; gold instead limits AVG to the subset and may double-count patients. No explicit requirement violated by pred.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": false
    }
  },
  {
    "question_id": 1464,
    "result": {
      "judgement": "Predicted query filters by the literal text '9/9/2019', which mismatches the stored format '2019-09-09', so it returns no rows and fails to list the students and amounts requested.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1389,
    "result": {
      "judgement": "Predicted query uses budget.amount instead of expense.cost, so it does not identify the event(s) with the minimum expense cost and returns a wrong event.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1394,
    "result": {
      "judgement": "Predicted query correctly counts members with the Physics Teaching major; DISTINCT is benign since member_id is unique.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1198,
    "result": {
      "judgement": "Prediction counts only female patients whose Examination rows list Diagnosis='APS', missing many female patients whose APS diagnosis is stored in Patient.Diagnosis, so it under-counts and does not answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1156,
    "result": {
      "judgement": "Predicted query correctly lists each patient’s ID and computed age for those with RVVT='+', matching the question; absence of DISTINCT is harmless given identical results.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1162,
    "result": {
      "judgement": "Prediction matches required filters and counting logic; differences (DISTINCT, LIKE) are benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1229,
    "result": {
      "judgement": "Predicted query correctly counts distinct patients whose TG >= 200 and calculated age > 50, matching the gold and question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1399,
    "result": {
      "judgement": "Prediction correctly checks for existence of Maya Mclean’s attendance at the specified event and returns true, matching the intended yes/no answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1410,
    "result": {
      "judgement": "Prediction correctly returns the member’s full name (concatenated) and the summed cost for the specified member id, matching the intent and value of the gold query.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1422,
    "result": {
      "judgement": "Prediction matches gold logic exactly; retrieves distinct budget categories for events held at MU 215 as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1220,
    "result": {
      "judgement": "Predicted query correctly selects patients whose UN equals 29; duplicates do not violate the request, so answer is semantically correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1208,
    "result": {
      "judgement": "Predicted query is semantically identical to the gold, correctly returning male patient IDs with GPT ≥ 60.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1460,
    "result": {
      "judgement": "Prediction matches the question requirements, returning the member’s full name (concatenated) and cost with correct filter; difference from gold is only column formatting.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1243,
    "result": {
      "judgement": "Predicted query correctly computes female proportion among abnormal PT cases for patients >55, aligning with evidence, while gold uses all PT cases in denominator, making gold incorrect.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1157,
    "result": {
      "judgement": "Predicted query correctly fetches patient id, sex, and diagnosis for thrombosis level 2; lack of DISTINCT is benign given identical results.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1239,
    "result": {
      "judgement": "Predicted query wrongly uses HCT > 52 instead of the explicitly required HCT >= 52, potentially omitting patients with a value of exactly 52.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1404,
    "result": {
      "judgement": "Prediction correctly groups by expense category and filters to approved expenses, while gold incorrectly returns the event type and omits the approval filter.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1149,
    "result": {
      "judgement": "Predicted query correctly restricts to male patients and provides the in/out ratios (including the gold value) thereby answering which group is larger and by how much; extra reciprocal column is acceptable.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1192,
    "result": {
      "judgement": "Predicted query satisfies all stated conditions and is semantically equivalent to the gold; no unjustified filters or omissions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1164,
    "result": {
      "judgement": "Prediction correctly counts distinct female patients with thrombosis = 1 in 1997; no unjustified filters added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1225,
    "result": {
      "judgement": "Prediction returns per-sex groups of patient IDs with T-BIL ≥ 2.0, satisfying the request to list and group patients by sex for abnormal T-BIL levels.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1265,
    "result": {
      "judgement": "Prediction uses RNP values '-' and '+-', exactly as the evidence specifies; discrepancy with gold stems from alternative textual encodings ('negative','0') of the same lab result, so the predicted query still answers the question correctly.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1432,
    "result": {
      "judgement": "Predicted query counts unique members (DISTINCT link_to_member) and divides by the number of members, so it measures the share of members who ever received a $50 payment rather than the share of $50 payments; this narrows the numerator and violates the stated formula.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1252,
    "result": {
      "judgement": "Prediction correctly counts distinct patients with IGG strictly between 900 and 2000 and non-null symptoms, matching the question, whereas the gold query uses inclusive bounds and may double-count patients.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1187,
    "result": {
      "judgement": "Prediction filters on Examination.Examination Date and requires it to match Laboratory.Date, whereas the question (and provided evidence) specifies filtering by Laboratory.Date only; this prevents valid patients from being returned, giving an empty result.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1255,
    "result": {
      "judgement": "Prediction joins Examination and Laboratory only on ID, producing many-to-many duplicates and counts diagnoses per exam×lab record rather than per patient; this misaligns with the question’s intent and yields a different answer, so the Prover’s pass must be overturned.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1231,
    "result": {
      "judgement": "Prediction matches all explicit requirements and mirrors gold logic with correct distinct patient counting.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1232,
    "result": {
      "judgement": "Predicted query applies the stated GLU ≥180 and T-CHO <250 conditions, joins to Patient, computes age per given formula, and returns the requested columns; extra duplicate rows are permissible for a list question, so it satisfies the question equally to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1256,
    "result": {
      "judgement": "Predicted query correctly counts distinct patients with abnormal CRP and missing Description, while gold over-counts repeated lab records, so prediction aligns with the question and gold is faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1153,
    "result": {
      "judgement": "Predicted query returns no rows because it relies on Examination table where patient 30609 has none; thus it fails to list lab dates and diagnosis.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1040,
    "result": {
      "judgement": "Predicted query matches the requested top 10 tall players ordered by average heading accuracy; grouping and aggregation are equivalent to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1025,
    "result": {
      "judgement": "Prediction matches the question semantics: it sums match goals for the 2015/2016 season per league, orders descending, and returns the top league name, fulfilling all explicit requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1275,
    "result": {
      "judgement": "Predicted query uses the exact normal-value codes specified in the evidence and counts distinct male patients, matching the question; gold uses different codes not listed in the evidence, so gold is likely wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1247,
    "result": {
      "judgement": "Predicted query correctly intersects male, normal WBC, and abnormal FG; gold missing parentheses lets any FG<=150 count regardless of WBC or sex, so gold wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1096,
    "result": {
      "judgement": "Prediction uses AVG instead of SUM/COUNT but returns the same average overall rating for Pietro Marino; logic and filters match the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1251,
    "result": {
      "judgement": "Predicted query correctly counts distinct patients whose IGG ≥ 2000, matching the question, whereas the gold unnecessarily requires an Examination row and therefore under-counts.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1302,
    "result": {
      "judgement": "Predicted query correctly counts distinct patients satisfying CPK<250 and any coagulation marker '+', whereas gold counts each qualifying examination row and thus over-counts; prediction meets question requirements, gold does not.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1114,
    "result": {
      "judgement": "Prediction meets all stated requirements; differing join key and AVG formulation are equivalent to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1209,
    "result": {
      "judgement": "Prediction returns the diagnoses of all patients whose GPT > 60 and orders them by birthday ascending; extra birthday column and duplicate rows do not violate the request, so semantics match the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1267,
    "result": {
      "judgement": "Prediction filters SM by '-' and '+-' values, but evidence says normal corresponds to database values 'negative' and '0', so the query returns none instead of 7; gold uses correct codes.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1068,
    "result": {
      "judgement": "Prediction satisfies all stated conditions and returns essentially the same average rating as the gold, so it correctly answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1030,
    "result": {
      "judgement": "Predicted query correctly counts draws in season '2015/2016' per league and returns the top league, matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1032,
    "result": {
      "judgement": "Predicted query returns a league whose match count equals the overall maximum (3040), satisfying the request despite ties; thus no substantive error.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1169,
    "result": {
      "judgement": "Predicted query is identical in logic to the gold except for multiplying the ratio by 100, which merely expresses the same ratio as a percentage – a permissible interpretation of “ratio”; therefore prediction is acceptable.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1036,
    "result": {
      "judgement": "Predicted query meets all stated requirements, while gold’s average mis-counts NULL rows; prediction is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1270,
    "result": {
      "judgement": "Prediction counts patients who simply lack an Examination record as “no symptoms,” inflating the total far beyond those with an explicit Symptoms IS NULL value; this violates the question’s intent.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1042,
    "result": {
      "judgement": "Prediction satisfies season filter and compares average home vs away goals per league exactly as required; no unjustified predicates are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1238,
    "result": {
      "judgement": "Prediction uses Examination.Diagnosis instead of Patient.Diagnosis, but both columns reasonably record SLE status; thus the query still answers the question (oldest SLE patient with normal HGB) and meets all stated conditions.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1092,
    "result": {
      "judgement": "Predicted query returns one of the leagues tied for the highest match count; tie-handling is not specified, so both single-row and all-ties answers are valid.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1079,
    "result": {
      "judgement": "Predicted query correctly selects the player(s) whose height equals the maximum height, satisfying the request for the tallest player.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 862,
    "result": {
      "judgement": "Prediction matches the question requirements (counts drivers with NULL time in the 2007 Bahrain GP); extra DISTINCT is harmless and results match gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1048,
    "result": {
      "judgement": "Averaging the 2011 records returns the same single rating in the data and is a reasonable way to express 'the rating in 2011', so prediction aligns with the question.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1031,
    "result": {
      "judgement": "Prediction inappropriately applies MAX, returning only the oldest age instead of all qualifying players’ ages as requested, thus omitting valid answers.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1110,
    "result": {
      "judgement": "Predicted query correctly retrieves buildUpPlayPassingClass for FC Lorient on 2010-02-22 matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1195,
    "result": {
      "judgement": "Prediction multiplies Laboratory rows by every matching Examination record per patient, so AVG(ALB) is biased and does not correctly answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1084,
    "result": {
      "judgement": "Prediction correctly counts distinct players born before 1986 with high defensive work rate.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1044,
    "result": {
      "judgement": "Predicted query correctly lists players born in October 1970 with no extraneous conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1254,
    "result": {
      "judgement": "Predicted query properly counts distinct patients with IgA between 80 and 500 after 1990, while gold counts lab rows duplicating patients, so prediction is semantically correct and gold is not.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1098,
    "result": {
      "judgement": "Predicted query takes MAX(score) but the class column is not grouped or tied to that max value, so it can return a mismatched classification, violating the question’s requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1103,
    "result": {
      "judgement": "Prediction matches the question requirements; date filtering and joins are correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1281,
    "result": {
      "judgement": "Prediction returns the maximum Birthday among patients with GOT >= 60, matching the youngest birth date requested.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1080,
    "result": {
      "judgement": "Predicted query properly counts distinct players meeting both conditions, while gold counts multiple attribute records per player and overstates the total.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1058,
    "result": {
      "judgement": "Predicted query reasonably returns the player (name) with the highest average finishing among those at the extreme heights, which fits the wording “Who … player?”.  Gold instead labels the height group (“Min/Max”).  The discrepancy stems from an ambiguous reading of the question rather than an error in the prediction.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1035,
    "result": {
      "judgement": "Prediction matches the requirement to return team_fifa_api_id where buildUpPlaySpeed is strictly between 50 and 60, so it correctly answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1122,
    "result": {
      "judgement": "Both queries correctly identify a player whose overall_rating reaches the global maximum, and singular return with LIMIT 1 is acceptable given no tie rule was stated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1102,
    "result": {
      "judgement": "Predicted query correctly filters 77 overall rating on 2016-06-23, joins to Player, orders by earliest birthday to get oldest, and returns the player name just like the gold; no unjustified predicates are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1091,
    "result": {
      "judgement": "Predicted query correctly counts matches in Belgium Jupiler League during April 2009, matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1057,
    "result": {
      "judgement": "Predicted query correctly computes the average home_team_goal for Poland in the 2010/2011 season, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 879,
    "result": {
      "judgement": "Pred query correctly converts fastestLapSpeed to numeric before ranking, giving the true highest-speed driver (Brazilian); gold orders textually, which ranks a 2-digit speed above 3-digit ones and returns an incorrect Italian driver.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1116,
    "result": {
      "judgement": "Prediction returns all players whose height equals the maximum, matching the request for rank 1 tallest players.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1242,
    "result": {
      "judgement": "Predicted query computes age using the current year instead of the examination year, so it wrongly excludes many patients and returns duplicate rows with extra columns; thus it does not satisfy the question, while the gold query is correct.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1136,
    "result": {
      "judgement": "Prediction correctly counts distinct players, while gold counts attribute rows and may double-count the same player, so prediction better matches the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1139,
    "result": {
      "judgement": "Predicted query correctly returns the home and away goals for the 24-Sep-2008 Belgian Jupiler League match, satisfying all stated requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1141,
    "result": {
      "judgement": "Prediction returns the most recent speed class (“Balanced”) for KSV Cercle Brugge, answering the singular choice posed in the question; gold lists all historical classes, a different but not required interpretation.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1257,
    "result": {
      "judgement": "Prediction matches the required filters for abnormal creatinine and age<70 and counts distinct patients, satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1133,
    "result": {
      "judgement": "Prediction imposes a stricter birthday filter (> 1990-12-31) than the stated anchor (> 1990), so it under-counts qualifying Aarons and yields a different total from the expected answer.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 847,
    "result": {
      "judgement": "Prediction correctly selects the driver with the minimum q2 time for raceId 19; ordering with LIMIT 1 is acceptable since question asks for the single best driver.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 850,
    "result": {
      "judgement": "Prediction retrieves distinct race names whose circuits are in Germany, matching question requirements and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1107,
    "result": {
      "judgement": "Predicted query correctly returns the earliest date of Kevin Constant’s maximum crossing value, while gold query actually returns the latest date regardless of crossing, so gold is wrong and prediction is correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1130,
    "result": {
      "judgement": "Predicted query correctly returns the short names of teams whose chanceCreationPassingClass is 'Safe', matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 865,
    "result": {
      "judgement": "Prediction matches the question intent, correctly finding the oldest finisher in race 592; extra selected columns are harmless.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 868,
    "result": {
      "judgement": "Prediction correctly joins races to circuits, filters on the Malaysian Grand Prix, and outputs the requested lat/lng; extra duplicate rows with identical values do not change the answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 897,
    "result": {
      "judgement": "Predicted query correctly identifies the top-winning driver, returns his nationality and maximum points, satisfying the question despite differing aggregation detail from gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1028,
    "result": {
      "judgement": "Predicted query meets all stated constraints and, despite a tie, returning one of the joint top teams is acceptable under tie-handling guidance.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 859,
    "result": {
      "judgement": "Predicted query exactly matches gold logic, satisfying all specified filters to return Bruno Senna’s Q1 time for raceId 354.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 912,
    "result": {
      "judgement": "Prediction correctly returns the circuitRef for the circuit named 'Marina Bay Street Circuit'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1145,
    "result": {
      "judgement": "Predicted SQL returns the same four leagues (all tied with 380 games) meeting the season filter and top-4 requirement; ordering among ties is immaterial to the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 875,
    "result": {
      "judgement": "Predicted query correctly returns the season URL for the year of race 901, matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1039,
    "result": {
      "judgement": "Predicted query correctly averages the long_shots ratings for Ahmed Samir Farag; using AVG and joining on player_fifa_api_id is semantically equivalent to the gold’s SUM/COUNT join.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 880,
    "result": {
      "judgement": "Prediction correctly computes the percent difference between Paul di Resta’s fastest-lap speeds in races 853 and 854 with no extraneous conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 895,
    "result": {
      "judgement": "Predicted query applies correct driver, race name, and year filters and averages lapTimes.milliseconds, fully answering the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 857,
    "result": {
      "judgement": "Prediction correctly returns the latitude and longitude of the Abu Dhabi Grand Prix circuit; extra duplicate rows do not violate the question’s requirement for the coordinate.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1076,
    "result": {
      "judgement": "Prediction computes the difference of the two players’ average ball_control using equivalent AVG-of-CASE logic; no unjustified filters or omissions exist.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 881,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of drivers in the 1983-07-16 race whose time is non-NULL, differing from gold only by harmless rounding.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 909,
    "result": {
      "judgement": "Predicted query correctly computes (German races / all European Grand Prix races)*100 with proper joins and filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 872,
    "result": {
      "judgement": "Predicted query matches gold logic, using race 45 and q3 LIKE '1:33%' to return the driver code; no unwarranted conditions added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 915,
    "result": {
      "judgement": "Prediction correctly finds nationality of driver(s) with earliest birth date; tie-handling difference is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1113,
    "result": {
      "judgement": "Prediction correctly queries defenceAggressionClass for Hannover 96 on 2015-09-10, matching the question, whereas gold retrieves an unrelated shooting class.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 945,
    "result": {
      "judgement": "Predicted query matches the question requirements; DISTINCT on primary key is benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 894,
    "result": {
      "judgement": "Predicted query still identifies the absolute minimum lap time and returns its driver and race, satisfying the question despite an extra grouping step.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 902,
    "result": {
      "judgement": "The predicted query uses the results table’s finishing position, while the gold uses championship standings; both satisfy reasonable interpretations of the vague term “track number”, so the prediction cannot be deemed wrong.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 901,
    "result": {
      "judgement": "Predicted query returns race name, circuit name, and location for races whose date is in September 2005, exactly matching the question; results match gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 937,
    "result": {
      "judgement": "Predicted query uses positionOrder=2 to capture the second-place finisher, yielding the known +14.925s gap, whereas gold uses rank=2 (fastest-lap rank), a different concept; given normal reading of “ranked second” as finishing position, prediction is semantically correct.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 960,
    "result": {
      "judgement": "Prediction answers the question correctly with equivalent filtering and aggregation as the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1105,
    "result": {
      "judgement": "Prediction matches the question’s requirement; LIMIT 1 is benign tie-handling and all filters are correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1147,
    "result": {
      "judgement": "Prediction satisfies the request by returning a player with the maximum overall_rating; no unjustified filters added and logic is equivalent to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1124,
    "result": {
      "judgement": "Prediction matches gold logic: both list distinct player names whose attacking_work_rate is 'high', satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 928,
    "result": {
      "judgement": "Prediction uses positionOrder=1 and returns winner Hamilton, which matches a natural reading of “ranked first”; gold instead uses rank=1 (fast-lap rank) giving Alonso. The wording allows either reading, so the prediction is acceptable.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 955,
    "result": {
      "judgement": "Prediction mis-parses the time string (seconds start at position 7), producing substantially lower averages than required; gold logic is correct.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 948,
    "result": {
      "judgement": "Predicted query matches gold and correctly computes the maximum points among constructorStandings rows for British constructors.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 981,
    "result": {
      "judgement": "Predicted query returns the driver’s full name instead of the race name requested, so it does not satisfy the question requirements.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 933,
    "result": {
      "judgement": "Predicted query matches all stated requirements for driver, race, year, and uses positionOrder for final rank; no extraneous predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1002,
    "result": {
      "judgement": "Prediction meets all question requirements, whereas gold query lacks logic to ensure the driver’s first race; prediction therefore stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 963,
    "result": {
      "judgement": "Prediction correctly counts distinct French drivers with sub-2-minute laps, while gold counts individual laps, so prediction matches the question and gold is wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1003,
    "result": {
      "judgement": "Predicted query rightly counts accidents per driver in Canadian Grand Prix where statusId = 3 and returns the maximum, satisfying the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 728,
    "result": {
      "judgement": "Predicted query correctly lists Marvel superheroes’ eye-colour frequencies in descending order, satisfying the ranking request; minor tie ordering and absence of an explicit rank column do not violate the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 854,
    "result": {
      "judgement": "Predicted query correctly selects latitude and longitude of circuits hosting the Australian Grand Prix; extra duplicate rows do not violate the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 730,
    "result": {
      "judgement": "Predicted query correctly retrieves Marvel Comics superheroes possessing 'Super Strength', matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 971,
    "result": {
      "judgement": "Prediction satisfies the request by selecting the German driverRef with the earliest birth date; no unjustified predicates are added and logic matches gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 740,
    "result": {
      "judgement": "Prediction correctly counts female heroes with Strength=100 (using DISTINCT is acceptable and safer), matching question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 869,
    "result": {
      "judgement": "Predicted query correctly selects the constructor with the highest points in race 9 and returns its url, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 717,
    "result": {
      "judgement": "Predicted query correctly joins superhero, hero_power, superpower and filters by superhero_name = '3-D Man' to list all associated power_name values, matching the question intent and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 877,
    "result": {
      "judgement": "Prediction correctly filters finishers of race 872 and selects the driver with the latest DOB; extra DOB column is benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 950,
    "result": {
      "judgement": "Prediction uses constructorResults and wrongly lists any constructor that has a zero-point entry, leading to extra teams like McLaren that clearly had points; gold query on constructorStandings matches the natural reading of 0 total points after race 291.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 758,
    "result": {
      "judgement": "Predicted query mismatches case for race value producing no rows, therefore fails to return the hair colours requested, whereas gold returns valid results.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 988,
    "result": {
      "judgement": "Predicted query satisfies all stated constraints and returns the same three drivers; minor ordering difference is not a clear violation, and prediction uses proper numeric field, so no strong error.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 723,
    "result": {
      "judgement": "Predicted query correctly counts superheroes with blue eyes having the Agility power; DISTINCT is benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 964,
    "result": {
      "judgement": "Prediction satisfies the request exactly like the gold, with no unjustified restrictions added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 773,
    "result": {
      "judgement": "Predicted query matches the requirement using equivalent equality conditions and retrieves superhero and publisher correctly.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 760,
    "result": {
      "judgement": "Prediction correctly computes the percentage of superheroes between 150-180 cm whose publisher_id = Marvel (id = 13) and thus answers the question; differences with gold (join vs direct id check) are benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 737,
    "result": {
      "judgement": "Prediction matches the question exactly, retrieving the race of superhero Copycat via the proper join; no extraneous predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 724,
    "result": {
      "judgement": "Predicted query correctly lists superheroes with blue eyes and blond hair using equivalent joins and filters to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 790,
    "result": {
      "judgement": "Predicted SQL correctly subtracts Emil Blonsky’s weight from Charles Chandler’s, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 750,
    "result": {
      "judgement": "Predicted query correctly computes the average weight for female superheroes with equivalent join and filter as gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 738,
    "result": {
      "judgement": "Predicted query correctly selects superhero names whose durability attribute value is below 50, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 751,
    "result": {
      "judgement": "Prediction lists 5 distinct superpowers of male superheroes, matching the question requirements; LIMIT 5 for an \"at least five\" request is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 732,
    "result": {
      "judgement": "Predicted query correctly finds the publisher of the hero with the minimum Speed attribute, matching the gold logic and the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 892,
    "result": {
      "judgement": "Prediction counts the maximum points a driver earned in a single race, returning Hamilton-50, while the task seeks the driver with the overall highest points total (season/standings), which is Vettel-397; hence prediction violates the core requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 989,
    "result": {
      "judgement": "Predicted query correctly retrieves the 2008 Canadian GP winner Robert Kubica along with his finish time, fully satisfying the question, whereas the gold query returns only the time.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 766,
    "result": {
      "judgement": "Predicted query filters on lowercase 'strength', yielding no rows, hence fails to return the hero name with the highest strength attribute whereas gold correctly fetches heroes with max Strength.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 744,
    "result": {
      "judgement": "Prediction returns only the absolute difference, omitting the sign needed to tell which publisher has more, so it cannot answer the full question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 532,
    "result": {
      "judgement": "Predicted query exactly matches the required filter for accounts created in 2011 and returns the requested display names, so it is correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 896,
    "result": {
      "judgement": "Predicted query correctly counts Hamilton’s non-winning race finishes since 2010 using the race results table, matching the evidence formula, whereas the gold query counts championship-standing positions and thus answers a different question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 904,
    "result": {
      "judgement": "Prediction returns the same race row as gold; column order (year, name) versus (name, year) is a harmless presentation difference.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 785,
    "result": {
      "judgement": "Prediction correctly lists superhero_name for neutral alignment superheroes, matching question intent and gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 910,
    "result": {
      "judgement": "Prediction exactly returns lat and lng for Silverstone Circuit, matching question requirements and gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 761,
    "result": {
      "judgement": "Predicted query correctly filters male superheroes whose weight exceeds 79 % of the overall average weight, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 775,
    "result": {
      "judgement": "Both queries compute the percentage of female superheroes whose skin colour is blue, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 931,
    "result": {
      "judgement": "Predicted query correctly computes the maximum fastest lap speed for the 2009 Spanish Grand Prix with equivalent filters to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 733,
    "result": {
      "judgement": "Prediction only adds DISTINCT on superhero.id, which is unique anyway, so it still counts Marvel-published gold-eyed heroes correctly.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 797,
    "result": {
      "judgement": "Predicted query faithfully returns superheroes whose eye colour is Blue and hair colour is Brown, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 557,
    "result": {
      "judgement": "Predicted query correctly computes percentage of posts with Score>5 whose owners are older than 65, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 769,
    "result": {
      "judgement": "Predicted query correctly filters on durability and publisher, orders by value desc, and returns the top hero; gold query omits the durability filter, so is semantically wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 779,
    "result": {
      "judgement": "Predicted query correctly counts Amazo's powers (adding DISTINCT is benign) thus matches question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 940,
    "result": {
      "judgement": "Predicted query correctly counts distinct drivers who finished the 2008 Chinese Grand Prix, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 745,
    "result": {
      "judgement": "Predicted query matches gold and fulfills the question precisely.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 825,
    "result": {
      "judgement": "Predicted query correctly retrieves the gender linked to the hero possessing the Phoenix Force power, matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 576,
    "result": {
      "judgement": "Prediction returns the display name of the user whose comment text exactly matches 'thank you user93!', fully aligning with the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 792,
    "result": {
      "judgement": "Predicted query correctly lists Abomination’s powers by joining superhero, hero_power, and superpower with the appropriate filter.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 547,
    "result": {
      "judgement": "Predicted query applies the same age and score filters as the gold, merely adding benign DISTINCT, hence correctly answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 786,
    "result": {
      "judgement": "Prediction correctly restricts the MAX to Strength while gold takes MAX over all attributes, so prediction matches the question and gold is logically faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 764,
    "result": {
      "judgement": "Predicted query correctly lists power_name for hero_id 1; absence of DISTINCT is benign for a list question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 791,
    "result": {
      "judgement": "Prediction ignores superheroes whose height is NULL, whereas evidence specifies averaging over the count of all heroes; thus the predicted SQL computes a different metric.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 819,
    "result": {
      "judgement": "Prediction correctly computes the requested difference among superheroes with missing weight, matching the question’s criteria.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 781,
    "result": {
      "judgement": "Predicted query exactly matches the gold logic and satisfies the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 806,
    "result": {
      "judgement": "Prediction matches question: selects colour.colour via correct join and full_name filter, no extraneous predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 798,
    "result": {
      "judgement": "Predicted query correctly fetches the publisher(s) associated with the three specified superheroes, returning the expected DC Comics value.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 794,
    "result": {
      "judgement": "Predicted query mirrors the gold logic, correctly picking the hero with the maximum speed attribute.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 539,
    "result": {
      "judgement": "Prediction correctly joins posts to users and returns the owner’s DisplayName for the specified title, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 822,
    "result": {
      "judgement": "Prediction matches the question and gold logic; extra DISTINCT is benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 967,
    "result": {
      "judgement": "Predicted query only counts Dutch drivers and fails to return the requested code numbers of the top-3 youngest drivers, violating an explicit part of the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 549,
    "result": {
      "judgement": "Predicted query correctly joins tags to posts via ExcerptPostId and filters TagName='bayesian', returning the post body as requested.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 537,
    "result": {
      "judgement": "Predicted query correctly counts all posts whose OwnerUserId corresponds to the user with DisplayName 'csgillespie', fully satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 565,
    "result": {
      "judgement": "Prediction correctly filters the comment, checks ClosedDate, and returns an affirmative answer, matching the question’s intent; wording difference from gold is immaterial.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 990,
    "result": {
      "judgement": "Predicted query correctly locates the winning constructor for the specified race by sorting on finishing order, meeting the champion requirement and returning the requested fields.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 572,
    "result": {
      "judgement": "Predicted query matches gold and correctly returns the post's view count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 567,
    "result": {
      "judgement": "Predicted query correctly counts posts owned by the user whose DisplayName is 'Tiago Pasqualini', matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 533,
    "result": {
      "judgement": "Pred includes users whose access occurred on 2014-09-01 (later than 00:00) whereas “after 2014/9/1” normally excludes that date, so it over-counts; gold’s date() filter matches the usual reading.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 581,
    "result": {
      "judgement": "Predicted query omits the question-mark in the title so fails to match the intended post, returning no owner; gold query with correct title returns owner Paul.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 977,
    "result": {
      "judgement": "Prediction wrongly counts distinct drivers and includes races 50 and 100, violating explicit >50 and <100 and event-level counting requirements.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 637,
    "result": {
      "judgement": "Predicted query lists distinct tag names for posts authored by Mark Meckes with zero comments, satisfying the stated requirements; alternative gold query targets posts he edited, so difference stems from interpretation, not error.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 719,
    "result": {
      "judgement": "Predicted query correctly counts unique superheroes with 'Super Strength' and height > 200 cm; DISTINCT is benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 629,
    "result": {
      "judgement": "Prediction matches the required 2010-to-2011 vote ratio with equivalent logic; differences are benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 563,
    "result": {
      "judgement": "Predicted query returns no row due to incorrect date literal, so it fails to provide the favorite count.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 671,
    "result": {
      "judgement": "Prediction matches intent: selects earliest Autobiographer badge holder’s display name with same logic as gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 578,
    "result": {
      "judgement": "Prediction correctly retrieves the display name and reputation of the user who owns the specified post; no extraneous filters added and logic matches the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 726,
    "result": {
      "judgement": "Predicted query filters Marvel heroes and orders them by height descending, satisfying the requested ranking even without an explicit rank column.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 736,
    "result": {
      "judgement": "Prediction selects the superhero with minimum intelligence and returns one name; tie-handling is acceptable since the question does not specify, so the query meets the requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 739,
    "result": {
      "judgement": "Predicted query correctly lists superheroes linked to the superpower named 'Death Touch', matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 604,
    "result": {
      "judgement": "Predicted query matches gold logic: averages of UpVotes and Age for users with more than 10 posts, no extraneous predicates or omissions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 633,
    "result": {
      "judgement": "Predicted query returns no post id (empty set), so it fails to answer the question, while gold returns id 351; prediction misses posts where slashnick appears only in postHistory/OwnerDisplayName, thus not satisfying the requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 747,
    "result": {
      "judgement": "Predicted query correctly counts superheroes whose full_name is NULL; using COUNT(*) instead of COUNT(id) is equivalent since id is never NULL.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 682,
    "result": {
      "judgement": "Predicted query returns the post id and owner’s display name for the 2010 post with the highest FavoriteCount, matching the question, whereas the gold filters by user creation year and returns a user id, so the prediction is correct and gold is wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 753,
    "result": {
      "judgement": "Predicted query correctly filters height 170-190 and eye colour \"No Colour\" and returns superhero names; lack of DISTINCT is acceptable given each superhero row is unique and duplicates are not explicitly excluded.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 669,
    "result": {
      "judgement": "Predicted query correctly returns the earliest vote date for user 'chl' using MIN, equivalent to the gold ordering-limit approach.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 765,
    "result": {
      "judgement": "Prediction correctly counts the number of heroes with the Stealth power, adding DISTINCT to avoid potential duplicates; no unjustified filters are added and intent is met.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 639,
    "result": {
      "judgement": "Predicted query counts Community posts correctly but treats a post as using R when its tag string merely contains the letter “r”, so many non-R posts qualify; this violates the explicit requirement that TagName be exactly ‘r’, therefore the prediction is incorrect.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 707,
    "result": {
      "judgement": "Prediction satisfies the stated requirement equally to gold; no unwarranted predicates added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 782,
    "result": {
      "judgement": "Predicted query correctly filters superheroes whose eye and hair colors are both black and adds no unjustified conditions; difference from gold is only join formulation.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 772,
    "result": {
      "judgement": "Predicted query correctly lists eye, hair, and skin colours (as names) for every female superhero from Dark Horse Comics, satisfying all stated filters; differences from gold are only in representing colour ids versus names.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 796,
    "result": {
      "judgement": "Predicted query correctly retrieves every (attribute_name, attribute_value) pair for superhero '3-D Man', matching gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 694,
    "result": {
      "judgement": "Predicted query correctly lists the 10 most recent comments with the commenter’s display name, whereas gold erroneously gives only the single latest comment and the post owner’s name.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 824,
    "result": {
      "judgement": "Predicted query matches the question requirements and mirrors the gold logic; no violations found.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 544,
    "result": {
      "judgement": "Prediction correctly retrieves the display name of the post’s last editor via LastEditorUserId, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 683,
    "result": {
      "judgement": "Prediction restricts the denominator to 2011 posts, while the question/evidence expects the percentage over all posts; thus the predicted percentage is wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 788,
    "result": {
      "judgement": "Predicted query flips numerator and denominator, giving percent of Marvel heroes who are female, not percent of female heroes published by Marvel as asked, so it does not answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 568,
    "result": {
      "judgement": "Predicted query correctly joins users to vote 6347 and returns the voter’s display name, matching gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 800,
    "result": {
      "judgement": "Predicted query correctly computes blue-eyed superheroes as eye_colour_id = 7 and divides by total heroes, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 672,
    "result": {
      "judgement": "Predicted query correctly counts distinct UK users with any post having FavoriteCount >= 4, whereas gold double-counts users across multiple posts and thus violates the “how many users” requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 377,
    "result": {
      "judgement": "Prediction matches the gold logic exactly; it correctly counts cards with original type 'Summon - Angel' whose subtype is not 'Angel'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 341,
    "result": {
      "judgement": "Prediction correctly returns borderless cards where at least one of cardKingdomFoilId or cardKingdomId is NULL, satisfying “without powerful foils”, while the gold query only checks cardKingdomId and is logically incomplete.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 704,
    "result": {
      "judgement": "Prediction matches the required filter and projection for the tag named 'sample', satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 710,
    "result": {
      "judgement": "Prediction correctly counts zero-score comments on posts having exactly one comment, while gold incorrectly filters by post score instead of comment score.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 531,
    "result": {
      "judgement": "Prediction returns the higher-reputation user (Harlan) just like gold, only adding the reputation column, so it answers the question correctly.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 586,
    "result": {
      "judgement": "Prediction returns the correct user display names for bounty 50 on posts with 'variance' titles, matching the gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 555,
    "result": {
      "judgement": "Predicted query correctly computes the average score for posts by the user with DisplayName 'csgillespie'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 573,
    "result": {
      "judgement": "Predicted query exactly matches the required filter and projection for comments with score 17.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 358,
    "result": {
      "judgement": "Predicted query redundantly returns four identical rows but still correctly identifies the border color as \"black\", satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 349,
    "result": {
      "judgement": "Predicted query correctly identifies the card with the highest number of rulings and reports its promo status, while the gold query instead focuses on promo cards and counts artists, not rulings, so gold is faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 345,
    "result": {
      "judgement": "Predicted query omits Restricted and Banned statuses that exist for artifact cards in Vintage, so it fails to state all relevant legalities.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 379,
    "result": {
      "judgement": "Prediction matches the question and gold exactly; no violation found.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 368,
    "result": {
      "judgement": "Prediction correctly calculates (borderless rows / total rows)*100, matching the question and gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 678,
    "result": {
      "judgement": "Prediction matches question and gold; correct ordering by ViewCount and filter by user complies fully.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 409,
    "result": {
      "judgement": "Prediction counts distinct cards, matching the question’s intent to count cards (not joined rows); no unjustified filters added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 705,
    "result": {
      "judgement": "Prediction matches question and gold: correct join on comments->users and selects requested fields.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 405,
    "result": {
      "judgement": "Prediction filtered on nonexistent language value 'Portuguese (Brasil)', returning 0 instead of the correct 7 Commander sets, so it fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 344,
    "result": {
      "judgement": "Predicted query applies all required filters and returns the matching mythic cards banned in gladiator (names rather than ids); this satisfies a reasonable reading of the request, so Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 422,
    "result": {
      "judgement": "Predicted query correctly selects the language where multiverseid equals 149934, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 640,
    "result": {
      "judgement": "Predicted query returns NULL (treating missing sums as NULL) and thus fails to compute the numeric difference that the question asks for, while gold returns a numeric value; the logic needs COALESCE or similar to handle absent posts.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 468,
    "result": {
      "judgement": "Predicted query correctly fetches the Simplified Chinese translation for the set named 'Eighth Edition', matching question intent and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 473,
    "result": {
      "judgement": "Prediction lists the isForeignOnly value(s) for the sets containing Adarkar Valkyrie; with the data it returns 0, meaning the card’s set(s) are not foreign-only, which correctly answers the yes/no question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 366,
    "result": {
      "judgement": "Prediction returns the card’s rules text (and even fails to find it) instead of the requested play formats, ignoring the evidence that “rule” refers to formats; gold query correctly lists formats.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 487,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of cards in the Coldsnap set whose cardKingdomFoilId and cardKingdomId are both non-null, matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 716,
    "result": {
      "judgement": "Predicted query matches the question’s requirements and mirrors gold logic; no extra or missing filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 198,
    "result": {
      "judgement": "Prediction correctly averages the number of single bonds per carcinogenic molecule, while the gold query’s join multiplies bond rows by atoms and over-counts, giving an inflated average.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 356,
    "result": {
      "judgement": "Prediction exactly counts rows where power is '*' matching the question definition of infinite power.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 427,
    "result": {
      "judgement": "Predicted query returns no rows while gold correctly lists the ten languages for set ARC; prediction therefore fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 352,
    "result": {
      "judgement": "Prediction counts unique cards with a Chinese-Simplified entry divided by all unique cards, matching the question, whereas gold divides by total foreign_data rows, giving a different, wrong metric.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 472,
    "result": {
      "judgement": "Predicted query correctly counts distinct sets in the 'Ice Age' block that have an Italian translation; no requirements violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 383,
    "result": {
      "judgement": "Prediction correctly counts unique banned white-border cards, while gold over-counts duplicates coming from multiple legality formats.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 486,
    "result": {
      "judgement": "Predicted query correctly computes the share of Coldsnap cards whose converted mana cost equals 7 with no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 416,
    "result": {
      "judgement": "Predicted query counts at the card level using DISTINCT whereas the evidence specifies counting each (card, language) row; this changes numerator and denominator and gives a different percentage, so the prediction fails to meet the stated requirements.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 231,
    "result": {
      "judgement": "Prediction correctly returns the most common bond type for TR010 and also gives the molecule’s carcinogenic label, matching the question’s two requirements, whereas the gold query omits the label.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 466,
    "result": {
      "judgement": "Prediction counts 0 cards because it matches the German set name against sets.name instead of set_translations.translation, so it fails to identify the set; gold correctly uses set_translations and returns 12.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 412,
    "result": {
      "judgement": "Predicted SQL satisfies all stated constraints and returns the correct foreign French names, so the Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 208,
    "result": {
      "judgement": "Prediction correctly returns label with highest count of hydrogen atoms, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 391,
    "result": {
      "judgement": "Predicted query correctly restricts to non-English language rows, ensuring the cards truly have foreign translations, whereas gold omits this filter and can include cards with only English data; prediction therefore meets the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 480,
    "result": {
      "judgement": "Prediction matches the question’s requirements exactly, retrieving the Italian flavorText for the specified card via correct join and filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 227,
    "result": {
      "judgement": "Predicted query correctly computes the requested percentage with three-decimal rounding and matches the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 414,
    "result": {
      "judgement": "Prediction matches question intent and mirrors gold logic; no violations found.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 459,
    "result": {
      "judgement": "Predicted query correctly identifies the higher-cost card between the two names; extra column does not violate the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 240,
    "result": {
      "judgement": "Predicted query correctly lists the distinct elements for molecule TR004 with no unjustified filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 529,
    "result": {
      "judgement": "Predicted query correctly enforces presence of Korean translation and absence of Japanese translation, whereas gold query only checks for Korean and thus can include sets that also have Japanese; gold is logically wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 474,
    "result": {
      "judgement": "Predicted query misses the required filter translation IS NOT NULL, so it can count sets lacking an actual Italian translation, violating the question’s explicit condition.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 213,
    "result": {
      "judgement": "Predicted query matches intent, joining through connected to get bond_type for either atom order, no unjustified filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 462,
    "result": {
      "judgement": "Predicted query correctly retrieves the Italian set names containing \"Ancestor's Chosen\" (only extra duplicate), fulfilling the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 253,
    "result": {
      "judgement": "Predicted query only joins through connected.atom_id and therefore lists elements of one side of each triple bond, omitting the elements in atom_id2, so it does not fully answer the request.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 477,
    "result": {
      "judgement": "Prediction correctly returns the subset of the three given artists who illustrated at least one card in set 'Coldsnap', matching gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 207,
    "result": {
      "judgement": "Predicted query properly finds atoms directly connected by double bonds via bond_id, while gold mistakenly includes all atoms in molecules containing any double bond, so prediction is correct and gold is wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 263,
    "result": {
      "judgement": "Prediction only looks at atoms listed as the first endpoint in the connected table, omitting atoms that appear solely in the second endpoint, so it does not cover all atoms involved in single bonds and gives a biased chlorine percentage.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 327,
    "result": {
      "judgement": "Predicted query correctly filters non-carcinogenic molecules and keeps those with more than five atoms; DISTINCT does not alter count because atom_id is unique.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 230,
    "result": {
      "judgement": "Prediction lists every atom’s element together with the molecule label; this necessarily includes all element types of TR060, merely with duplicates and an extra atom_id column, so no requirement is violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 226,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of double bonds for molecule TR008 with required precision, matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 12,
    "result": {
      "judgement": "Predicted SQL faithfully computes the maximum free-meal rate among schools whose SAT excellence rate exceeds 0.3, with only harmless safeguards against division-by-zero.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 522,
    "result": {
      "judgement": "Predicted query returns the same card–format pairs as gold, only with duplicates, which is acceptable for a “which/list” question; therefore it satisfies the request.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 243,
    "result": {
      "judgement": "Prediction selects bonds that connect a phosphorus atom to a nitrogen atom, matching the question’s requirement, without adding or omitting any unjustified filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 239,
    "result": {
      "judgement": "Predicted query follows the stated pattern for atom 19 and counts the relevant bond_id values just like the gold; differences (JOIN, DISTINCT, filter style) do not violate any requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 415,
    "result": {
      "judgement": "Predicted query filters status = 'legal' (lower-case) which matches no rows, giving NULL, so it fails to compute the requested percentage, whereas gold with 'Legal' returns 100.0; prediction therefore violates the question’s requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 40,
    "result": {
      "judgement": "Predicted query can pick a school with NULL reading score (NULLs sort first) and therefore returns a different phone number than the true minimum non-null score; it does not satisfy the question’s requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 249,
    "result": {
      "judgement": "Prediction joins only on connected.atom_id, so it returns the element of one atom and omits the second atom in the bond, violating the request for the elements of the atoms of that bond.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 260,
    "result": {
      "judgement": "Predicted query correctly counts phosphorus or bromine atoms in molecules that have at least one triple bond; the added DISTINCT only avoids duplicate counting and does not violate any explicit requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 72,
    "result": {
      "judgement": "Prediction matches the requested filters and returns the enrollment figure for age 5-17 at the specified State Special School in Fremont for academic year 2014-2015; no unjustified predicates are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 46,
    "result": {
      "judgement": "Predicted query correctly finds the state special school(s) with the highest K-12 enrollment, matching the intent and yielding same result as gold; minor column difference is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 92,
    "result": {
      "judgement": "Prediction ignores the explicit female condition; it counts all districts with salary in range, not those associated with female clients, thus violates a stated requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 465,
    "result": {
      "judgement": "The prediction checks whether the card itself has a Korean-language printing, while the question (and gold) concern whether the set containing that card has a Korean translation; thus the prediction answers a different requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 82,
    "result": {
      "judgement": "Pred query finds the school(s) with maximum |longitude|, and returning one GSoffered via LIMIT 1 satisfies the singular wording; tie-handling is unspecified so this is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 479,
    "result": {
      "judgement": "Prediction satisfies all stated filters and counts cards with unknown power in Coldsnap having converted mana cost > 5; logic matches question and gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 282,
    "result": {
      "judgement": "Predicted query multiplies the proportion by 100, producing a percentage rather than the ratio defined in the evidence, so it violates the explicit requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 219,
    "result": {
      "judgement": "Prediction counts triple bonds inside carcinogenic molecules, but the question seeks the share of carcinogenic molecules among those having triple bonds, so the prediction answers the wrong ratio.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 115,
    "result": {
      "judgement": "Predicted SQL filters to district(s) with the maximum inhabitants in south Bohemia and computes the male-client percentage, matching the question’s intent; tie handling differences are acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 200,
    "result": {
      "judgement": "Predicted query matches gold logic and satisfies all stated requirements; no unjustified predicates added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 528,
    "result": {
      "judgement": "The predicted query correctly lists each card from the set “Hour of Devastation” along with every format where its status is Legal, matching the question’s intent, so the Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 234,
    "result": {
      "judgement": "Predicted query correctly counts bonds where atom 12 participates in molecule TR009, while the gold query filters for atoms 1 and 2, so gold is wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 218,
    "result": {
      "judgement": "Predicted query correctly computes percentage of carcinogenic molecules lacking any fluorine atoms, whereas gold logic mis-counts molecules that also contain non-fluorine atoms, so gold is wrong.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 39,
    "result": {
      "judgement": "Using City='Fresno' instead of County='Fresno' is a reasonable alternate reading of “Fresno schools,” so the predicted query still answers the question correctly.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 206,
    "result": {
      "judgement": "Predicted query correctly retrieves elements for both atoms in the bond, unlike gold which only looks at the first atom.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 273,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of chlorine atoms among all atoms in carcinogenic molecules, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 232,
    "result": {
      "judgement": "Predicted query meets all stated requirements—filters by non-carcinogenic label and single bonds, orders molecule_id alphabetically, and limits to three—matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 220,
    "result": {
      "judgement": "Prediction matches the question: it selects unique elements for molecule TR000, orders alphabetically, and limits to three.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 23,
    "result": {
      "judgement": "Predicted query uses ABS(), thus also selecting schools where (Enrollment K-12 – Enrollment 5-17) < –30, while the evidence explicitly defines the directed difference and requires it to be > 30; this violates the stated condition.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 236,
    "result": {
      "judgement": "Prediction matches the question, selecting bond_type with corresponding atom_id and atom_id2 for bond 'TR001_6_9'; filter on bond table vs connected is equivalent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 95,
    "result": {
      "judgement": "Predicted query applies both youngest-client and highest-district-salary constraints as the question states, whereas gold query ignores the salary condition; thus prediction semantically matches the request despite differing result from gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 245,
    "result": {
      "judgement": "Predicted query answers the requested average for iodine atoms and does not add or omit any unjustified filter; differences with gold are implementation details only.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 89,
    "result": {
      "judgement": "Predicted query returns zero accounts because it matches region value with incorrect case, whereas the correct count is 13; thus prediction is wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 424,
    "result": {
      "judgement": "Predicted query correctly calculates the percentage of cards that are textless and have normal layout over the total card count, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 118,
    "result": {
      "judgement": "Prediction gets the requested percentage of (distinct) accounts with loan amount <100000 and status 'C', satisfying the query; differences from gold are within reasonable interpretation.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 268,
    "result": {
      "judgement": "Query only returns the element of the first atom in the bond, omitting the second atom’s element required by “elements”, so prediction is incomplete.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 112,
    "result": {
      "judgement": "Prediction uses account’s district, gold uses client’s district; both match the question’s intent since client.district_id also represents branch location, and no required filter is missed.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 37,
    "result": {
      "judgement": "Predicted query picks one school that is not among those with the minimum excellence rate returned by the gold query; hence it does not guarantee the lowest rate and gives a wrong address.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 17,
    "result": {
      "judgement": "Predicted query correctly filters schools with AvgScrWrite > 499, ensures CharterNum not null, orders them descending (thus ranking) and shows charter numbers; extra CDSCode column is harmless.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 48,
    "result": {
      "judgement": "Predicted SQL correctly computes the ratio of merged Unified (DOC 54) to merged Elementary (DOC 52) schools in Orange County using equivalent filters; only benign DISTINCT and NULLIF differences exist.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 129,
    "result": {
      "judgement": "Predicted query aggregates withdrawal amounts per district, orders by total to give the ten districts with the highest withdrawals in Jan-1996, matching a natural reading of “top ten withdrawals … by district names”; the gold query merely lists ten districts alphabetically, ignoring any notion of ‘top’, so gold is likely wrong while prediction is correct.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": false
    }
  },
  {
    "question_id": 469,
    "result": {
      "judgement": "Prediction correctly checks for at least one Angel of Mercy printing whose set has a non-null MTGO code, yielding the required yes/no answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 192,
    "result": {
      "judgement": "Prediction satisfies the required filters and computation exactly like the gold query; no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 281,
    "result": {
      "judgement": "Predicted query misidentifies 4th atoms: it only checks the 7th character is '4', so atoms like index 40, 41 etc. are wrongly included; hence counts are incorrect regardless of whether tally means counts or listing.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 169,
    "result": {
      "judgement": "Prediction matches question intent and uses acceptable logic; extra OWNER filter aligns with common interpretation that loans relate to account owners.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 32,
    "result": {
      "judgement": "Predicted query meets all stated constraints, just returns percentage instead of fraction which is a reasonable interpretation of rate; otherwise logic matches gold.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 484,
    "result": {
      "judgement": "Prediction returns the Italian names of all Coldsnap cards whose mana cost equals the set-maximum, matching the question, whereas the gold query outputs the English names, so the prediction is acceptable and gold is faulty.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 99,
    "result": {
      "judgement": "Prediction applies correct filters (duration>12, account opened in 1993), picks max approved amount, and returns matching account(s); extra column is harmless so answer is correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 195,
    "result": {
      "judgement": "Both queries select the bond_type with the highest frequency; prediction matches question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 24,
    "result": {
      "judgement": "Predicted query satisfies both conditions and correctly returns school names, with minor implementation differences that do not violate the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 212,
    "result": {
      "judgement": "The prediction counts total atom occurrences per element while the gold counts the number of molecules containing each element; both interpretations are plausible for \"least numerous in non-carcinogenic molecules\", and no explicit requirement favors the gold’s distinct-molecule approach, so the prediction cannot be deemed wrong.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 128,
    "result": {
      "judgement": "Predicted query counts female clients who are OWNERs, a plausible definition of account holder, producing correct district ranking and counts for that interpretation; difference from gold stems from ambiguity over whether non-owner users are also holders.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 83,
    "result": {
      "judgement": "Predicted query correctly counts magnet schools serving K-8 with “Multiple Provision Types” by city; using GSserved instead of GSoffered fits the wording “serving” and does not violate any explicit requirement, so no reason to overturn.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 228,
    "result": {
      "judgement": "Predicted query correctly computes hydrogen atoms as a percentage of all atoms for molecule TR206, rounded to four decimals, matching question intent and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 98,
    "result": {
      "judgement": "Predicted query correctly identifies weekly-frequency accounts with 1997 loans whose amount equals the overall minimum, satisfying the requirement; differences are only tie handling.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 159,
    "result": {
      "judgement": "Predicted query correctly lists all cash withdrawals for client 3356 and satisfies question requirements, differing from gold only in extra columns.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 119,
    "result": {
      "judgement": "Prediction returns account id, district name, and region for 1993 accounts whose frequency value denotes post-transaction statements, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 242,
    "result": {
      "judgement": "Both queries properly return carcinogenic molecules having any atom ids between 21 and 25; substring position difference is acceptable and results coincide.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 36,
    "result": {
      "judgement": "Predicted query correctly finds the school with the maximum NumGE1500 and returns the administrators’ full names; concatenation versus separate columns is acceptable and aligns with the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 255,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of single bonds whose molecules are labeled carcinogenic with required precision and no spurious filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 50,
    "result": {
      "judgement": "Prediction correctly selects the 7th-highest math average school and returns its mailing street address and name with no spurious filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 125,
    "result": {
      "judgement": "Prediction lists each in-debt running loan together with its district and correctly computes the 1995-96 unemployment-rate increment, matching the question, while the gold query omits the district column required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 5,
    "result": {
      "judgement": "Prediction correctly counts distinct schools (via CDSCode) with AvgScrMath > 400 and Virtual = 'F', matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 194,
    "result": {
      "judgement": "Predicted query matches the requested filters (gold card and OWNER disposition) and returns client_id with the same year-based age computation as the gold; no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 100,
    "result": {
      "judgement": "Prediction reasonably counts female clients born before 1950 living in Sokolov who actually have an account, matching a plausible reading of “among the account opened,” and no unwarranted filters are added.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 28,
    "result": {
      "judgement": "Predicted query uses the wrong FundingType value casing, yielding no rows, and returns DOCType instead of the requested DOC/DOC type, so it does not answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 45,
    "result": {
      "judgement": "Predicted query appropriately filters schools managed by Ricci Ulrich and returns one average-writing-score value per school, satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 79,
    "result": {
      "judgement": "Prediction matches gold logic: counts schools with Virtual='F' in the two counties and returns the county with the larger count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 117,
    "result": {
      "judgement": "Predicted query correctly calculates the share of loan amount with status 'A' over the total, matching the question and evidence.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 41,
    "result": {
      "judgement": "Prediction returns the correct set of school names (proper virtual filter, county-partitioned top-5 by AvgScrRead); extra county column does not violate the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 93,
    "result": {
      "judgement": "Predicted constant capitalization causes zero matches; query returns wrong answer.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 116,
    "result": {
      "judgement": "Predicted query captures the required client, uses correct dates, and computes the same increase‐rate without adding unjustified filters; structural differences (dual JOIN and range check) do not violate requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 138,
    "result": {
      "judgement": "Predicted query correctly identifies the district with the second-highest 1995 crime count and counts male clients there; no unjustified predicate added and ties were not specified, so Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  }
]