[
  {
    "question_id": 67,
    "result": {
      "judgement": "The prediction correctly filters for Community College District closures in San Francisco during 1989, using COUNT(*) which is equivalent to COUNT(School) when School is non-null.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 20,
    "result": {
      "judgement": "The prediction incorrectly filters on `frpm.County Name` (a code) instead of `schools.County` (name), violating schema semantics.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 51,
    "result": {
      "judgement": "Prediction fails to exclude NULL AvgScrRead scores, potentially returning invalid results while gold query properly filters them.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 31,
    "result": {
      "judgement": "Predicted SQL correctly calculates eligible free rates for 10th and 11th highest enrollment schools, including school names as benign additional information",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 112,
    "result": {
      "judgement": "Predicted SQL correctly retrieves the account's district via account table, aligning with the question's focus on where the account was opened, while gold incorrectly uses client's district.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 80,
    "result": {
      "judgement": "Prediction uses schools.SOCType instead of frpm.School Type for school type, violating schema semantics for the question's requirements.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 141,
    "result": {
      "judgement": "Prediction checks individual transaction amounts while gold checks aggregate sum, both valid interpretations of ambiguous question wording",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 124,
    "result": {
      "judgement": "The prediction selects district_id while the gold uses district_name (A2), but the question's 'district' is ambiguous between identifier and name.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 0,
    "result": {
      "judgement": "Predicted SQL incorrectly joins with schools table using 'County' instead of filtering frpm's 'County Name' directly, resulting in empty data.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 236,
    "result": {
      "judgement": "Predicted SQL correctly retrieves bond type and atoms from appropriate tables via equivalent join logic with benign alias differences.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 405,
    "result": {
      "judgement": "Predicted SQL correctly counts sets in the Commander block with Brazilian Portuguese translations using equivalent logic to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 218,
    "result": {
      "judgement": "The prediction correctly calculates the percentage by excluding molecules with fluorine, while the gold erroneously counts molecules with any non-fluorine atom as non-fluorine-containing.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 376,
    "result": {
      "judgement": "The predicted SQL correctly uses a wildcard match to find 'Flying' within keywords lists, while the gold's exact match relies on schema-specific formatting assumptions.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": false
    }
  },
  {
    "question_id": 77,
    "result": {
      "judgement": "Predicted SQL incorrectly uses precomputed percentage column stored as decimal without converting to percentage, violating evidence calculation requirements.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 220,
    "result": {
      "judgement": "The prediction reasonably interprets 'top three elements' as the first three atom elements in alphabetical order without requiring distinct elements, aligning with the ambiguous question phrasing.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 465,
    "result": {
      "judgement": "Prediction checks for Korean version in card-specific translations (foreign_data), while gold checks set-level translations (set_translations). Question's 'Korean version' interpretation depends on card vs set localization, making schema usage ambiguous.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": false
    }
  },
  {
    "question_id": 304,
    "result": {
      "judgement": "The predicted SQL uses GROUP BY to achieve the same distinct molecule-element pairs as the gold's DISTINCT, preserving correct semantics for listing carcinogenic molecules and their elements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 174,
    "result": {
      "judgement": "Predicted SQL incorrectly assumes client_id=130 is the account owner without joining through disp table to verify ownership status, violating schema relationships.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 281,
    "result": {
      "judgement": "Predicted SQL correctly tallies elements via COUNT(*), while gold only lists distinct elements - prediction meets question's 'tally' requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 606,
    "result": {
      "judgement": "The prediction incorrectly uses DISTINCT for a 'list' question that does not require deduplication, altering the result.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 425,
    "result": {
      "judgement": "The prediction correctly filters for cards without multiple faces and ensures both Angel and Wizard subtypes are present using LIKE, while the gold's exact 'Angel,Wizard' match may miss valid entries with additional subtypes.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 233,
    "result": {
      "judgement": "Both queries correctly retrieve bonds for molecule TR006 as bond.molecule_id directly links to the molecule, making the predicted SQL valid.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 480,
    "result": {
      "judgement": "Predicted SQL is logically equivalent to gold standard, differing only in join condition order which does not affect result.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 264,
    "result": {
      "judgement": "Prediction omits molecule_id needed to map labels to specific molecules, violating explicit question requirements.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 761,
    "result": {
      "judgement": "Both queries correctly filter male superheroes and compare weight against 79% of average using mathematically equivalent conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 861,
    "result": {
      "judgement": "Prediction incorrectly uses qualifying.number (car number) instead of drivers.number (driver's permanent number) despite the question's reference to 'his number' (driver identifier).",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 670,
    "result": {
      "judgement": "Both queries correctly identify the youngest user's first post using equivalent logic with different implementations: prediction via subquery for min age and min creation date, gold via ordering.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 898,
    "result": {
      "judgement": "Prediction correctly calculates age and retrieves the youngest Japanese driver using equivalent logic to gold, differing only in explicit casting which preserves semantic correctness.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 570,
    "result": {
      "judgement": "The prediction correctly retrieves the badge name for the specified user and includes DISTINCT to avoid duplicates, which is a reasonable interpretation given the question's ambiguity about duplicate handling.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 766,
    "result": {
      "judgement": "Predicted SQL correctly retrieves the full name of the superhero with the maximum strength attribute value using equivalent logic to the gold query.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 597,
    "result": {
      "judgement": "The prediction correctly counts distinct users from India with the 'Teacher' badge, addressing potential badge duplication, while the gold erroneously counts badge instances instead of users.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 751,
    "result": {
      "judgement": "The prediction uses DISTINCT to list unique superpowers, which is a reasonable interpretation of 'list down' when considering potential duplicates, while the gold omits it; both approaches align with the question's requirements.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 853,
    "result": {
      "judgement": "The prediction correctly retrieves race names from circuits in Spain but includes duplicates, which is acceptable as the question does not explicitly require distinct names.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 447,
    "result": {
      "judgement": "Prediction correctly retrieves commander-type set codes directly from sets table, while gold unnecessarily joins with set_translations creating duplicates without question justification",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 430,
    "result": {
      "judgement": "The predicted SQL correctly filters for Italian-language cards in the Shadowmoor block and orders alphabetically by name as required, while the gold SQL incorrectly orders by set ID instead of name.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 984,
    "result": {
      "judgement": "Predicted SQL correctly aggregates total wins per constructor while gold SQL picks single highest race win entry",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 470,
    "result": {
      "judgement": "The predicted SQL returns duplicate release dates due to omitting DISTINCT, but the question allows multiple valid interpretations regarding set uniqueness.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 505,
    "result": {
      "judgement": "The prediction correctly retrieves the Simplified Chinese translation for the set 'Mirrodin' using an equivalent INNER JOIN instead of a subquery, preserving identical semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1068,
    "result": {
      "judgement": "Both queries correctly compute the average rating for players over 170cm between 2010-2015 using equivalent logic (AVG vs SUM/COUNT) and valid date filtering approaches (BETWEEN vs explicit bounds).",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 719,
    "result": {
      "judgement": "Predicted SQL correctly counts distinct superhero IDs with Super Strength and height over 200cm, equivalent to gold's COUNT under primary key uniqueness.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 885,
    "result": {
      "judgement": "Both queries correctly retrieve the race with the highest round number in 1999 using equivalent logic (max round selection vs ordering+limit).",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 646,
    "result": {
      "judgement": "Predicted SQL correctly filters positive comments from comments table and joins posts to get title, while gold SQL incorrectly joins on comments' own Id causing invalid results.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 845,
    "result": {
      "judgement": "Both queries correctly filter superheroes by height greater than 80% of average and retrieve their powers, differing only in arithmetic formulation (0.8 multiplier vs *100/*80 scaling), which are mathematically equivalent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 860,
    "result": {
      "judgement": "The prediction incorrectly uses an exact match for Q2 time '0:01:40' while the gold uses a LIKE pattern '1:40%' to account for time formatting variations, leading to divergent results.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 868,
    "result": {
      "judgement": "Both queries correctly retrieve the circuit coordinates for the Malaysian Grand Prix, with the prediction returning multiple identical entries due to races occurring at the same circuit. The question's lack of explicit distinct requirement allows the prediction's approach.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 894,
    "result": {
      "judgement": "Predicted SQL correctly retrieves the minimum lap time by joining relevant tables and ordering, with a benign NOT NULL filter that does not alter the result.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 949,
    "result": {
      "judgement": "The predicted SQL correctly aggregates total points per constructor to determine the highest overall points, while the gold SQL incorrectly identifies a constructor based on maximum single-race points instead of cumulative points.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 507,
    "result": {
      "judgement": "The predicted SQL incorrectly calculates the percentage based on individual card translations instead of set translations as required, misusing the schema.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 878,
    "result": {
      "judgement": "Prediction correctly filters non-null times and aligns with evidence to find MIN(time), upholding core requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 711,
    "result": {
      "judgement": "Prediction correctly counts distinct users while gold incorrectly counts comment IDs, violating question's requirement for user count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 762,
    "result": {
      "judgement": "Prediction incorrectly aggregates on power_name instead of hero_id, leading to invalid count of occurrences.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 927,
    "result": {
      "judgement": "The predicted SQL omits the `fastestLapTime IS NOT NULL` filter, but the schema does not explicitly require non-null `fastestLapTime` for valid `fastestLapSpeed`. Without evidence that speed can exist independently of time, the prediction remains semantically valid under a permissible schema interpretation.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 794,
    "result": {
      "judgement": "Both SQL queries correctly retrieve the superhero with the highest 'Speed' attribute value through equivalent logic despite table alias differences.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 718,
    "result": {
      "judgement": "Predicted SQL correctly counts superheroes with 'Super Strength' via valid table joins and filtering, making it semantically equivalent to the gold despite syntax differences.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 865,
    "result": {
      "judgement": "The predicted SQL omits filtering drivers with NULL dob, which could incorrectly include invalid entries when determining the oldest; the gold's `dob IS NOT NULL` ensures valid comparisons.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 801,
    "result": {
      "judgement": "Prediction incorrectly assumes gender_id 1=Male and 2=Female without validating against gender labels, violating schema requirements",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1131,
    "result": {
      "judgement": "The predicted SQL calculates average height using players in Italy-associated matches via joined tables, while the gold incorrectly joins Player.id=Match.id (invalid schema relationship). Prediction's approach is reasonable given schema limitations; gold is structurally flawed.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 909,
    "result": {
      "judgement": "Both queries correctly compute the percentage by joining races and circuits to identify European Grand Prix events and filtering for Germany, using equivalent aggregation methods (SUM with CASE vs COUNT with CASE) and valid denominator counts.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1197,
    "result": {
      "judgement": "Prediction correctly uses Description column for first documented date per evidence, while gold incorrectly uses First Date.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 999,
    "result": {
      "judgement": "Prediction fails to exclude NULL fastestLapTime values, potentially selecting invalid records while gold properly filters them.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1129,
    "result": {
      "judgement": "Predicted SQL retrieves duplicate team names due to multiple Team_Attributes entries, but question allows 'list' without requiring DISTINCT.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 989,
    "result": {
      "judgement": "Predicted SQL correctly selects champion's name and time via position=1, aligning with schema and evidence, while gold SQL omits driver name.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1277,
    "result": {
      "judgement": "Both SQL queries correctly count distinct patients with normal anti-DNA levels and unrecorded data using equivalent join logic and filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 978,
    "result": {
      "judgement": "The prediction correctly counts races per circuit location in Austria, aligning with the question's intent to quantify event occurrences, while the gold erroneously lists circuits without considering races.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 874,
    "result": {
      "judgement": "The prediction correctly identifies the driver by surname, which is a reasonable interpretation of the question asking for 'who'.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 940,
    "result": {
      "judgement": "The prediction correctly counts distinct drivers who finished the 2008 Chinese Grand Prix and inherently have race participation by being in the results table, satisfying the question's core requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1158,
    "result": {
      "judgement": "The predicted SQL is logically equivalent to the gold standard, correctly filtering patients born in 1937 with T-CHO ≥ 250 as required by the evidence.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1440,
    "result": {
      "judgement": "The prediction correctly retrieves emails meeting criteria but includes duplicates, which is acceptable for 'list' questions without explicit distinct requirement.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1359,
    "result": {
      "judgement": "Prediction correctly calculates the budget ratio without unnecessary event type filter, aligning with question and evidence.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1441,
    "result": {
      "judgement": "Prediction correctly anchors to exact 'education' major per evidence while gold uses broader LIKE pattern, making prediction semantically correct",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1244,
    "result": {
      "judgement": "Prediction correctly lists distinct patients satisfying the conditions, while gold fails to remove duplicates and is incorrect.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1012,
    "result": {
      "judgement": "The prediction retrieves the circuit location of Hamilton's fastest lap while the gold retrieves his track position during that lap, reflecting ambiguity in interpreting 'position of the circuits' (location vs driver's race position).",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1090,
    "result": {
      "judgement": "Prediction retrieves one long_passing score for the oldest player while gold returns multiple, but question implies singular answer and schema allows multiple valid interpretations of attribute selection",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": false
    }
  },
  {
    "question_id": 1032,
    "result": {
      "judgement": "Both queries correctly count matches per league and retrieve the league with the maximum count, but different execution results indicate potential ties in match counts. The prediction's ORDER BY + LIMIT approach is valid for retrieving one maximum, while the gold's MAX-aggregate method fails to properly associate the max count with its league.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1491,
    "result": {
      "judgement": "Predicted SQL correctly calculates per-country counts while gold SQL erroneously uses uncorrelated subquery returning global count repeatedly",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1510,
    "result": {
      "judgement": "Prediction correctly calculates average total price (Amount × Price) per schema, while gold erroneously averages unit Price.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1488,
    "result": {
      "judgement": "The question ambiguously allows interpreting 'consumed the most' as either maximum single consumption or total consumption, and the prediction's focus on single consumption is reasonable.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1104,
    "result": {
      "judgement": "Both queries correctly retrieve Francesco Parravicini's potential on 2010-08-30 via equivalent date filtering (exact timestamp vs date substring match).",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1130,
    "result": {
      "judgement": "The prediction correctly filters teams by 'Safe' chance creation passing but omits DISTINCT, leading to duplicates which are acceptable for 'list' questions without explicit uniqueness requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 86,
    "result": {
      "judgement": "Prediction uses '40' instead of required 4-digit '0040' for CharterNum, failing to match schema requirements",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1227,
    "result": {
      "judgement": "Predicted SQL correctly computes the average age using current year minus birth year, joins Patient and Laboratory on ID, and filters for male patients with high cholesterol as required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1294,
    "result": {
      "judgement": "The predicted SQL correctly filters for creatinine <1.5 and orders by highest aCL IgA, differing only in table alias selection which yields identical results due to INNER JOIN on ID.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1116,
    "result": {
      "judgement": "Predicted SQL correctly selects tallest players by maximum height, aligning with the question's intent despite differing syntax.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 373,
    "result": {
      "judgement": "The prediction correctly retrieves cards by Aaron Boyd but includes duplicates, which is acceptable as the question does not explicitly require distinct names.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1465,
    "result": {
      "judgement": "Predicted SQL correctly retrieves the budget category for 'Posters' expense via proper joins and filtering, and multiple identical category rows still fulfill the question's singular category request.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 223,
    "result": {
      "judgement": "Prediction correctly retrieves both atom IDs involved in bond TR000_2_5 through connected table columns atom_id and atom_id2, fulfilling the question's requirements despite mirrored pairs.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 477,
    "result": {
      "judgement": "The predicted SQL correctly returns distinct artist names from the specified list that designed cards in the 'Coldsnap' set, using equivalent logic to the gold query via IN-clause filtering and DISTINCT instead of GROUP BY.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1492,
    "result": {
      "judgement": "The predicted SQL correctly computes the percentage of KAM customers paying in euros using equivalent logic to the gold standard despite syntactic differences.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 40,
    "result": {
      "judgement": "Predicted SQL incorrectly joins on district and school names instead of primary key (cds=CDSCode), risking mismatched schools and invalid results.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1473,
    "result": {
      "judgement": "The predicted SQL correctly computes average monthly consumption for SME customers in 2013 using a LIKE filter equivalent to SUBSTR for YYYYMM date strings as validated by evidence.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1177,
    "result": {
      "judgement": "The predicted SQL correctly checks if total cholesterol was below the 250 threshold for the specified patient and date, returning a boolean that answers the yes/no question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1430,
    "result": {
      "judgement": "The predicted SQL correctly applies both required filters (expense_description and expense_date) with proper joins, aligning fully with the question's semantic requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 668,
    "result": {
      "judgement": "Predicted SQL correctly groups users by DisplayName and counts badges, aligning with the question's requirement to find the user with the highest badge count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1422,
    "result": {
      "judgement": "The predicted SQL retrieves event types directly from the 'event' table, while the gold standard joins with 'budget' to get budget categories, reflecting ambiguity in interpreting 'category of events'.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 195,
    "result": {
      "judgement": "Both queries correctly determine the most common bond type by counting unique bonds, differing only in COUNT column (bond_id vs bond_type) which are equivalent given bond_id is the primary key.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 481,
    "result": {
      "judgement": "The predicted SQL correctly retrieves distinct languages by enforcing non-null flavorText, aligning with the question's requirement despite differing from the gold's approach.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1514,
    "result": {
      "judgement": "Prediction correctly retrieves currency from customers linked to transactions without unnecessary joins, while gold adds irrelevant gasstations table.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 357,
    "result": {
      "judgement": "Predicted SQL includes null promoTypes entries which are not valid promotions, violating the question's requirement to report promotion types.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 907,
    "result": {
      "judgement": "The prediction correctly lists races and hosting countries for 2017 ordered by date; including the date column is acceptable as it aligns with ordering requirements and doesn't violate the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1486,
    "result": {
      "judgement": "Prediction incorrectly sums transaction amounts instead of counting SMEs per currency, violating question's intent to compare SME counts.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 38,
    "result": {
      "judgement": "Prediction filters by county in satscores table while gold uses schools.County, but both cname and County fields represent county names per schema - valid alternative interpretations exist.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 99,
    "result": {
      "judgement": "The predicted SQL correctly identifies the account with the highest approved loan amount among accounts opened in 1993 and having loan duration over 12 months, using logically equivalent filtering and ordering as the gold standard.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1178,
    "result": {
      "judgement": "Prediction omits `First Date IS NOT NULL`, potentially including invalid entries and altering the result.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 464,
    "result": {
      "judgement": "The prediction correctly joins tables on setCode and filters by the translated set name, but returns duplicates which are permissible for 'list' questions.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1315,
    "result": {
      "judgement": "Predicted SQL correctly counts distinct students attending the event, while gold SQL counts attendance records (potentially duplicates). Prediction aligns with question's intent to count students.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1480,
    "result": {
      "judgement": "Predicted SQL incorrectly identifies peak month by individual consumption instead of aggregating monthly totals, violating the question's intent for total monthly consumption.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 720,
    "result": {
      "judgement": "The predicted SQL correctly counts distinct powers per hero, while the gold erroneously groups by non-unique full_name, potentially aggregating multiple heroes.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 552,
    "result": {
      "judgement": "The prediction correctly retrieves distinct badge names for the user through proper schema joins, but removes duplicates while the gold includes them - both interpretations are valid under 'list' semantics.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1533,
    "result": {
      "judgement": "The predicted SQL correctly retrieves consumption status for customers meeting the specified price-per-unit condition on product ID 5 during August 2012, with equivalent logic to the gold standard.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 2,
    "result": {
      "judgement": "Predicted SQL incorrectly uses 'schools.County' instead of 'frpm.District Name' to identify Fresno County Office of Education, violating schema structure.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 137,
    "result": {
      "judgement": "Both queries correctly count accounts with running contracts in district 1 by checking status 'C' or 'D'; the extra district join in gold is redundant but does not affect correctness.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 172,
    "result": {
      "judgement": "The prediction counts combined dispositions while the gold separates them; the question's 'how many X and Y' phrasing allows reasonable interpretation as either combined or separate counts.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 167,
    "result": {
      "judgement": "The predicted SQL correctly filters for junior cards issued after 1996 and includes a redundant but harmless DISTINCT and client table join, which do not violate the question's requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1161,
    "result": {
      "judgement": "Predicted SQL correctly calculates average aCL IgG for in-patients ≥50 with equivalent logic as gold, differing only in WHERE clause order.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 728,
    "result": {
      "judgement": "Both queries correctly rank eye colors by count for Marvel Comics; the prediction orders results without explicit ranking numbers, which aligns with the question's intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 563,
    "result": {
      "judgement": "Predicted SQL correctly retrieves the post's FavoriteCount by joining comments and posts on the correct keys with accurate filters, matching the question's requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 916,
    "result": {
      "judgement": "Prediction unnecessarily uses DISTINCT for a 'list all' question, altering semantics if duplicates exist.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 437,
    "result": {
      "judgement": "Predicted SQL correctly retrieves card names meeting criteria while gold incorrectly selects IDs instead of names.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 358,
    "result": {
      "judgement": "Predicted SQL retrieves the correct border color despite multiple rows, as all results are identical and align with the question's intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 426,
    "result": {
      "judgement": "Predicted SQL correctly includes both NULL and empty mtgoCode conditions per evidence while gold misses empty strings, making prediction more accurate.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 996,
    "result": {
      "judgement": "Predicted SQL correctly calculates the annual average over 11 years (2000-2010) as per evidence, while gold SQL incorrectly divides by 10 years despite using the full date range.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 736,
    "result": {
      "judgement": "Predicted SQL returns only one superhero despite multiple having the minimum Intelligence value, failing to include all 'dumbest' per the gold's subquery approach.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 615,
    "result": {
      "judgement": "Prediction fails to use DISTINCT on UserId, leading to overcounting users with multiple Organizer badges, violating the question's requirement to count users (not badges)",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1366,
    "result": {
      "judgement": "The prediction retrieves member names while gold uses member_ids; both interpretations are valid under the question's wording.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1209,
    "result": {
      "judgement": "Both queries correctly retrieve diagnoses from patients with elevated GPT, joining on patient ID and ordering by birthday, differing only in alias usage.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 739,
    "result": {
      "judgement": "Both SQL queries correctly retrieve superhero names with 'Death Touch' power via equivalent logical joins and filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1285,
    "result": {
      "judgement": "Prediction correctly anchors 'latest patient' by MAX(First Date) and checks LDH, but returns NULL due to missing matching lab data - aligns with evidence requirements. Gold incorrectly finds latest First Date among all LDH>=500 patients, violating question's primary patient selection criteria.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1063,
    "result": {
      "judgement": "Predicted SQL correctly retrieves Aaron Doran's potential score using a valid alternative join key (player_fifa_api_id) consistent with the schema.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1399,
    "result": {
      "judgement": "Predicted SQL correctly checks existence via COUNT > 0 while gold SQL returns multiple rows with invalid formatting for a yes/no question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1204,
    "result": {
      "judgement": "Predicted SQL correctly calculates the days between First Date and Examination Date via Julian day difference, aligning with DATEDIFF evidence, while gold SQL incorrectly computes day-of-month subtraction.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 91,
    "result": {
      "judgement": "The predicted SQL fails to return the year with the higher average unemployment rate as required by the question, instead only calculating the average values without comparison.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 849,
    "result": {
      "judgement": "Prediction correctly retrieves URLs for races held at Circuit de Barcelona-Catalunya from races.url, while gold erroneously selects circuit.url which describes the circuit itself rather than its races.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1367,
    "result": {
      "judgement": "Prediction correctly groups by college to find the member count, while gold incorrectly groups by major_id which violates the question's intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 398,
    "result": {
      "judgement": "Predicted SQL incorrectly converts non-numeric manaCost values (e.g., '{W}') to integers and sums them, violating schema understanding of manaCost format.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 168,
    "result": {
      "judgement": "Prediction correctly joins account to client via disp and uses account's district for filtering, aligning with the question's intent, while gold mistakenly uses client's district.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 28,
    "result": {
      "judgement": "The prediction correctly interprets 'DOC type' as the textual description (DOCType) rather than the numeric code (DOC), aligning with the schema and question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 81,
    "result": {
      "judgement": "Predicted SQL fails to ensure non-null latitude and uses ambiguous school name source, violating schema requirements.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 456,
    "result": {
      "judgement": "Prediction returns duplicate type entries while gold correctly uses DISTINCT to list unique types.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 300,
    "result": {
      "judgement": "The question asks for the atoms comprising TR186, which should list atom identifiers (atom_id), not elements. The prediction incorrectly retrieves elements instead of atom IDs, violating schema semantics.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 97,
    "result": {
      "judgement": "The prediction correctly identifies clients with 'DISPONENT' type and the specified account frequency, using DISTINCT which is acceptable for listing unique IDs.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 250,
    "result": {
      "judgement": "Prediction fails to handle ties by using LIMIT 1 when multiple molecules share the maximum double bonds, violating core requirement to return all top candidates.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 440,
    "result": {
      "judgement": "The predicted SQL incorrectly queries set_translations.translation instead of foreign_data.name as required by the question's focus on 'foreign language used by' the card's foreign name.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1099,
    "result": {
      "judgement": "Predicted SQL retrieves multiple consistent entries for preferred_foot, aligning with the question's requirements despite lacking DISTINCT.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 562,
    "result": {
      "judgement": "The prediction correctly retrieves the precomputed CommentCount from posts, which aligns with the question's intent to get the number of comments for a post with 1910 views.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 359,
    "result": {
      "judgement": "The predicted SQL fails to exclude NULL values for the original type, violating the requirement to return only valid card types as the question demands non-null factual attributes.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 102,
    "result": {
      "judgement": "The predicted SQL correctly uses transaction balance to determine ownership, while the gold erroneously filters by transaction amount instead of account balance, violating the question's intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 710,
    "result": {
      "judgement": "Predicted SQL correctly filters comments with Score=0 under posts having CommentCount=1, while gold SQL erroneously filters posts' Score=0 instead of comments'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 433,
    "result": {
      "judgement": "Prediction uses cards.isOnlineOnly instead of sets.isOnlineOnly, misaligning with the question's focus on sets (set_translations vs. foreign_data).",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 176,
    "result": {
      "judgement": "Predicted SQL correctly filters for active debt status 'D', but the question's phrasing allows interpretation of including all loans, resulting in ambiguous intent.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 400,
    "result": {
      "judgement": "Prediction uses DISTINCT to retrieve unique set codes, which is a reasonable interpretation of the question's intent to list distinct sets containing translated cards.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 228,
    "result": {
      "judgement": "Prediction lacks rounding to 4 decimal places as explicitly required by the question's formatting directive.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 954,
    "result": {
      "judgement": "Both queries correctly calculate completion percentage using non-null time checks and proper year/nationality filters, with equivalent COUNT logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 318,
    "result": {
      "judgement": "The prediction correctly retrieves the molecule_id directly from the bond table, while the gold uses an unnecessary join path via atom/connected tables.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 854,
    "result": {
      "judgement": "Both queries retrieve the correct circuit coordinates by joining races and circuits, with the prediction returning duplicates due to multiple race years at the same location. The question does not explicitly require deduplication, making the prediction's duplicate rows semantically acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1022,
    "result": {
      "judgement": "Predicted SQL correctly retrieves preferred_foot for players with minimum potential, while gold SQL adds an unjustified 'penalties' filter not mentioned in the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 483,
    "result": {
      "judgement": "Both SQL queries correctly retrieve Italian text rulings from the Coldsnap set via proper joins, differing only in redundant DISTINCT usage which doesn't affect identical execution results.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 365,
    "result": {
      "judgement": "Prediction correctly retrieves card type without unnecessary joins, matching question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 302,
    "result": {
      "judgement": "Both SQL queries only retrieve elements from one atom of the bond pair, missing the second atom required by the question's 'atoms of bond' requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1071,
    "result": {
      "judgement": "Predicted SQL lacks DISTINCT causing duplicates, while gold correctly ensures unique team name as required by 'the team' in question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 591,
    "result": {
      "judgement": "Both queries incorrectly count badge instances instead of distinct users, violating the question's requirement for user count.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 363,
    "result": {
      "judgement": "Predicted SQL incorrectly counts duplicate cards due to multiple legalities, violating the requirement to count distinct cards.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1281,
    "result": {
      "judgement": "Predicted SQL uses MAX(birthday) to correctly identify the youngest birthdate, which is logically equivalent to the gold's ORDER BY DESC LIMIT 1 approach for answering 'when was the youngest born' given identical results.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 835,
    "result": {
      "judgement": "Both queries correctly calculate the percentage of 'good' Marvel superheroes using equivalent logic (SUM vs COUNT(CASE)) with proper schema joins and filtering.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 138,
    "result": {
      "judgement": "Prediction correctly retrieves the second-highest A15 district via LIMIT/OFFSET and counts male clients, equivalent to gold's LIMIT 1,1 approach.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1168,
    "result": {
      "judgement": "Prediction fails to ensure non-null Birthday for valid age calculation, violating schema constraints.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 364,
    "result": {
      "judgement": "Both queries correctly retrieve the card's legality status across formats, but the question's ambiguity allows multiple status entries or a single distinct result.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 411,
    "result": {
      "judgement": "Prediction incorrectly uses 'text' column instead of 'flavorText' in foreign_data table to match card's flavor text requirement.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 72,
    "result": {
      "judgement": "Prediction correctly filters by academic year '2014-2015' as text while gold erroneously uses numeric BETWEEN, but both semantically target the same enrollment column.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 230,
    "result": {
      "judgement": "The prediction retrieves all atom elements without DISTINCT, leading to duplicates, whereas the question implies distinct elements of the molecule.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 504,
    "result": {
      "judgement": "Both queries correctly count cards in the set 'World Championship Decks 2004' with convertedManaCost=3 using valid join paths and identical semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 248,
    "result": {
      "judgement": "Predicted SQL correctly retrieves triple bond atoms via connected and bond tables, omitting redundant atom table join present in gold SQL.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 327,
    "result": {
      "judgement": "Predicted SQL correctly counts atoms per non-carcinogenic molecule using equivalent grouping and counting logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 389,
    "result": {
      "judgement": "Prediction correctly retrieves card names and ruling dates while gold fails to select names as required by the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1033,
    "result": {
      "judgement": "Prediction uses AVG(height) which may exclude NULL heights, while evidence formula requires SUM/COUNT(id) to include all players regardless of height data presence.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 594,
    "result": {
      "judgement": "Prediction correctly retrieves the post creator's display name and reputation via posts.OwnerUserId join, while gold incorrectly queries commenters on the post.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 732,
    "result": {
      "judgement": "Predicted SQL correctly joins tables to find the publisher of the superhero with the minimum 'Speed' attribute value, aligning with the question's intent and schema constraints.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 758,
    "result": {
      "judgement": "The prediction returns valid hair colors matching the criteria without enforcing uniqueness, which is acceptable since the question doesn't specify distinct results.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 742,
    "result": {
      "judgement": "Prediction correctly counts vampire superheroes by race via primary key, differing only in COUNT(target) which is equivalent here.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 431,
    "result": {
      "judgement": "Predicted SQL correctly filters for sets not available outside the US (isForeignOnly=0), foil-only (isFoilOnly=1), and Japanese translations through valid schema joins, matching question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 814,
    "result": {
      "judgement": "The prediction correctly retrieves skin colours for superheroes with any attribute value of 100 but includes duplicates, while the gold uses DISTINCT to eliminate duplicates. The question's 'list' requirement allows duplicates unless explicitly stated, making both approaches valid under different interpretations.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 846,
    "result": {
      "judgement": "Predicted SQL logically matches the gold by correctly selecting the 5 slowest Q1 drivers for race 20, with DISTINCT being benign redundancy due to unique driverIds.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1175,
    "result": {
      "judgement": "Prediction correctly uses Examination Date for age and retrieves doctor's diagnosis from Examination table, while gold incorrectly uses Laboratory Date and Patient Diagnosis.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 529,
    "result": {
      "judgement": "Predicted SQL correctly checks for sets with Korean translations and absence of Japanese translations using EXISTS/NOT EXISTS, while gold SQL erroneously conflates language filters in a single subquery (invalidating the Japanese exclusion check).",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1449,
    "result": {
      "judgement": "Predicted SQL correctly retrieves members with expenses over $100 but duplicates are acceptable since the question doesn't specify DISTINCT.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 957,
    "result": {
      "judgement": "Prediction incorrectly uses 'milliseconds IS NULL' instead of 'time IS NULL' as per evidence, violating explicit requirement.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 899,
    "result": {
      "judgement": "Prediction violates explicit evidence requiring filtering by year extracted from date column, not using the year integer column.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 952,
    "result": {
      "judgement": "The predicted SQL incorrectly uses 'position' from constructorStandings instead of 'rank' from results to identify constructors ranked 1 based on fastest lap speed, violating schema alignment.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1509,
    "result": {
      "judgement": "The predicted SQL correctly counts transactions in Czech gas stations after 2012-01-01 via direct date comparison, while the gold uses a year extraction approach. The ambiguity stems from whether 'after 2012/1/1' excludes the day (predicted) or includes the entire year (gold), making both interpretations valid under the question's phrasing.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1014,
    "result": {
      "judgement": "The prediction uses lap times from the `laptimes` table instead of the dedicated `FastestLapTime` field in `results`, violating schema semantics for official lap records.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 638,
    "result": {
      "judgement": "Prediction correctly selects distinct user names with Organizer badges as per ambiguous interpretation of 'list all names' (unique users vs occurrences).",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1273,
    "result": {
      "judgement": "Predicted SQL uses '0' instead of '+-' for SSB values, violating schema definitions of valid anti-SSB indicators.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": false
    }
  },
  {
    "question_id": 1298,
    "result": {
      "judgement": "The predicted SQL correctly filters patients by T-CHO < 250 and ANA Pattern = 'P' with equivalent joins and logic to the gold SQL, differing only in condition order.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1065,
    "result": {
      "judgement": "The predicted SQL correctly retrieves team names with 'Fast' build-up play speed class via proper joins and filtering, and duplicates are acceptable for a 'list all' question.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 808,
    "result": {
      "judgement": "Both queries correctly filter and join tables to retrieve race, but predicted SQL includes duplicates while gold uses DISTINCT. The question doesn't specify uniqueness requirement, making this an ambiguous interpretation case.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1450,
    "result": {
      "judgement": "Predicted SQL correctly counts incomes per event while gold incorrectly filters individual income amounts, violating the question's requirement for event-based income counts.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1225,
    "result": {
      "judgement": "Prediction correctly groups patients by sex using GROUP_CONCAT per evidence, while gold fails to aggregate properly by grouping on ID which breaks sex-based grouping.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 939,
    "result": {
      "judgement": "Both queries correctly count British drivers in the 2008 Australian Grand Prix, with the DISTINCT clause being redundant but harmless due to one driver per race.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 421,
    "result": {
      "judgement": "Predicted SQL uses LIKE for promoTypes instead of exact match required by evidence, potentially including incorrect entries.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1338,
    "result": {
      "judgement": "Predicted SQL incorrectly links expenses to events via attendance/member instead of budget, violating schema relationships.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1512,
    "result": {
      "judgement": "Predicted SQL correctly calculates total payment per customer as SUM(Amount * Price) per schema description, while gold SQL incorrectly uses SUM(Price) which contradicts explicit schema evidence.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1035,
    "result": {
      "judgement": "The predicted SQL correctly filters for build-up play speed between 50 and 60 but returns duplicates, which is acceptable as the question does not explicitly require distinct team IDs.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1250,
    "result": {
      "judgement": "Prediction correctly filters for SLE diagnosis and normal proteinuria level per evidence requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1006,
    "result": {
      "judgement": "Predicted SQL relies on lexicographical ordering of text-based time values, which fails to correctly identify the fastest lap time due to format incompatibility with chronological ordering.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1426,
    "result": {
      "judgement": "The prediction correctly filters by major and omits the unnecessary position filter not mentioned in the question, while the gold adds an unjustified predicate on position.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 522,
    "result": {
      "judgement": "Prediction lacks GROUP BY to deduplicate formats, causing repeated entries which violate the question's requirement to list each banned format once per card.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1499,
    "result": {
      "judgement": "Both queries correctly identify the maximum monthly consumption for euro-currency customers through logically equivalent methods: MAX aggregation versus ORDER BY DESC LIMIT 1.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1054,
    "result": {
      "judgement": "Predicted SQL joins on player_fifa_api_id instead of player_api_id, violating schema relationships and potentially retrieving incorrect attributes.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 934,
    "result": {
      "judgement": "The prediction correctly joins tables and filters on grid=4 for the 1989 Australian Grand Prix, aligning with the question's requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1219,
    "result": {
      "judgement": "Predicted SQL correctly computes the average UA for each patient's latest lab while gold SQL incorrectly selects latest date across all patients, leading to incorrect results.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1249,
    "result": {
      "judgement": "Prediction correctly retrieves distinct diagnoses meeting the proteinuria threshold while gold returns duplicates without DISTINCT, violating list question conventions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 786,
    "result": {
      "judgement": "The predicted SQL correctly computes the maximum attribute value specifically for 'Strength' and counts heroes achieving that value, aligning with the question and evidence, while the gold SQL erroneously uses the global maximum across all attributes.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1318,
    "result": {
      "judgement": "Prediction fails to return all events with maximum attendance due to LIMIT 1 when ties exist, violating MAX requirement in evidence",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 913,
    "result": {
      "judgement": "Prediction correctly retrieves the country with highest altitude circuit, matching the gold result despite including an extra column.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1419,
    "result": {
      "judgement": "The prediction retrieves 'type' from event instead of 'category' from budget via join, violating schema structure requirements.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1527,
    "result": {
      "judgement": "Prediction correctly calculates total revenue per gas station using SUM(Amount * Price) as required by schema documentation, while gold erroneously sums Price alone.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1487,
    "result": {
      "judgement": "Prediction correctly filters LAM customers using EUR and selects highest consumption for October 2013 without requiring aggregation, given primary key constraints make SUM redundant.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 992,
    "result": {
      "judgement": "The predicted SQL correctly concatenates forename and surname as fullname per evidence, aligning with the question's requirement, while the gold SQL lists them separately but still meets the semantic goal.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1050,
    "result": {
      "judgement": "Both SQLs correctly join on valid foreign keys (player_api_id vs player_fifa_api_id) with equivalent birthday ordering, representing ambiguous schema choices.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1235,
    "result": {
      "judgement": "The prediction includes duplicate patient entries due to missing DISTINCT, while the question implicitly requires unique patients.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1195,
    "result": {
      "judgement": "Predicted SQL correctly applies all required filters and joins, differing only in condition order which does not affect semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 619,
    "result": {
      "judgement": "The prediction correctly counts distinct adult users with the Supporter badge, matching the question's intent despite differing phrasing from the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 344,
    "result": {
      "judgement": "Predicted SQL retrieves card names with duplicates instead of unique printings (ids), violating the question's requirement for distinct print cards.",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 1159,
    "result": {
      "judgement": "Prediction lacks DISTINCT modifier but question allows duplicate patient entries under ambiguous phrasing, making both approaches valid interpretations.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 508,
    "result": {
      "judgement": "The prediction correctly identifies available printing types but includes duplicates, which is permissible for 'list' questions unless distinct is explicitly required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1391,
    "result": {
      "judgement": "The prediction correctly counts students by joining the member table but fails to handle division by zero, while the gold incorrectly counts majors rather than students.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 349,
    "result": {
      "judgement": "Predicted SQL correctly retrieves the card with most rulings and reports its promo status, while gold incorrectly restricts to promotional cards.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 399,
    "result": {
      "judgement": "Prediction correctly retrieves all subtypes and supertypes (including NULLs) as per evidence, while gold incorrectly filters non-NULL pairs only.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 634,
    "result": {
      "judgement": "Prediction correctly sums view counts from user-owned posts while gold incorrectly uses postHistory, violating schema alignment for 'posts by' requirement.",
      "verdict": false,
      "ambiguity": "ambiguous schema",
      "gold_correct": false
    }
  },
  {
    "question_id": 418,
    "result": {
      "judgement": "The question asks for distinct printing kinds associated with Daren Bader's cards, but the prediction returns duplicate entries instead of unique availability types.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1437,
    "result": {
      "judgement": "Predicted SQL uses member names instead of IDs and may mishandle date format, but both are reasonable under ambiguous question and schema interpretations.",
      "verdict": false,
      "ambiguity": "ambiguous question, ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 321,
    "result": {
      "judgement": "Predicted SQL correctly identifies molecule_id via atom_id's inherent naming convention (TR000_* implies TR000), aligning with schema documentation.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 546,
    "result": {
      "judgement": "The prediction correctly identifies users with well-finished posts using DISTINCT to remove duplicates, while the gold returns duplicates like 'Tailltu' twice, making both approaches valid interpretations of the question's listing requirement.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1253,
    "result": {
      "judgement": "Prediction uses LIMIT 1 which fails to return all patients tied for maximum IGA, violating core requirement to identify all qualifying patients.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1013,
    "result": {
      "judgement": "Prediction uses lap times from `laptimes` instead of `results.fastestLapTime` which directly stores fastest laps per evidence/schema",
      "verdict": true,
      "ambiguity": "ambiguous schema",
      "gold_correct": true
    }
  },
  {
    "question_id": 189,
    "result": {
      "judgement": "Predicted SQL uses ORDER BY and LIMIT 1 which may miss multiple clients meeting both oldest and lowest salary criteria, while gold correctly selects all matching entries via subqueries.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  }
]