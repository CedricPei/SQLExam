[
  {
    "question_id": 40,
    "result": {
      "judgement": "Predicted query keeps NULL reading scores, so it picks a school lacking a score instead of the true lowest-scoring school; thus it answers the question incorrectly.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 93,
    "result": {
      "judgement": "Prediction matches question requirements; same filters and row count as gold, so acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 117,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of loan amount with status 'A', matching the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 45,
    "result": {
      "judgement": "Prediction matches gold semantics, listing each school managed by Ricci Ulrich with its average writing score.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 98,
    "result": {
      "judgement": "Predicted query matches the question requirements and is semantically equivalent to the gold; no unjustified predicate or omission is present.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 89,
    "result": {
      "judgement": "Predicted query applies the correct region and frequency filters and counts accounts, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 200,
    "result": {
      "judgement": "Predicted query satisfies both conditions and returns the correct molecule ids; extra duplicates are acceptable for a list question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 208,
    "result": {
      "judgement": "Prediction matches question intent, counting hydrogen atoms per molecule label and returning the most frequent label.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 227,
    "result": {
      "judgement": "Prediction calculates the percentage but omits the required rounding to three decimal places, giving 44.314869 instead of the requested 44.315.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 118,
    "result": {
      "judgement": "Prediction matches the intended calculation of percentage of running (status='C') loans under 100k; extra join is benign and both gold and pred treat “accounts” as loan rows, a reasonable reading.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 138,
    "result": {
      "judgement": "Predicted SQL correctly finds the male client count in the district with the second-highest 1995 crime figure, matching the gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 240,
    "result": {
      "judgement": "Predicted query correctly lists the elements for TR004; duplicates do not violate the question wording, thus answer is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 198,
    "result": {
      "judgement": "Prediction returns the proportion of single bonds among carcinogenic bonds, while the question (and gold) ask for the average count of single bonds per carcinogenic molecule, so the prediction violates the required granularity.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 159,
    "result": {
      "judgement": "Predicted query correctly filters the client’s cash withdrawals and returns one row per withdrawal, differing from gold only in which attribute (amount vs id) is displayed—a reasonable alternative reading of what to “list”.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 253,
    "result": {
      "judgement": "Predicted query matches gold logic, selecting distinct elements of atoms involved in triple bonds; no requirement violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 327,
    "result": {
      "judgement": "Predicted query correctly lists molecule_ids whose label is non-carcinogenic ('-') and which have >5 atoms, matching the question’s requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 195,
    "result": {
      "judgement": "Predicted query correctly finds the bond_type with the highest frequency, matching the gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 352,
    "result": {
      "judgement": "Predicted query computes the percentage of joined card rows whose language is 'Chinese Simplified' exactly as requested; using COUNT(cards.availability) instead of COUNT(id) is benign given availability is non-null for cards and produced the same result, so no clear violation exists.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 239,
    "result": {
      "judgement": "Predicted query matches the evidence-based pattern for atom 19 and correctly counts its bonds; no explicit requirement is violated despite using a slightly stricter LIKE clause than the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 368,
    "result": {
      "judgement": "Predicted query correctly computes the percentage of cards whose borderColor is 'borderless'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 383,
    "result": {
      "judgement": "Predicted query matches gold and satisfies counting banned cards with white border.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 219,
    "result": {
      "judgement": "Pred computes the ratio exactly as spelled out in the evidence (percentage of triple bonds among bonds within carcinogenic molecules), while gold computes a different ratio across molecules; the wording allows both readings, so prediction is acceptable and gold appears off with respect to the provided hint.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": false
    }
  },
  {
    "question_id": 405,
    "result": {
      "judgement": "Prediction correctly filters on language = 'Portuguese (Brasil)' per evidence, whereas gold uses 'Portuguese (Brazil)'; prediction aligns with the question and schema.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 228,
    "result": {
      "judgement": "Predicted query omits rounding to four decimal places, violating explicit requirement for answer format.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 263,
    "result": {
      "judgement": "Predicted query correctly calculates the percentage of chlorine atoms within molecules that have at least one single bond, matching the gold’s logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 282,
    "result": {
      "judgement": "Predicted query correctly computes #hydrogen / total atoms for molecule TR006 and returns that ratio together with the molecule’s label, matching the question’s intent without unwarranted filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 459,
    "result": {
      "judgement": "Prediction is semantically equivalent to the gold query, correctly returning the higher-CMC card between the two names.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 344,
    "result": {
      "judgement": "Predicted query correctly selects mythic-rarity card prints with banned status in gladiator format; duplicates reflect multiple prints of the same card, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 255,
    "result": {
      "judgement": "Prediction computes the same proportion of carcinogenic single bonds; the only discrepancy is lack of ROUND to 5 decimals, a presentation issue not affecting the numeric answer.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 366,
    "result": {
      "judgement": "Predicted query correctly retrieves the play formats associated with the card, matching gold semantics and satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 379,
    "result": {
      "judgement": "Prediction matches the question: it selects the IDs of cards whose duelDeck is 'a', exactly as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 402,
    "result": {
      "judgement": "Prediction omits the required isTextless filter, so it computes the percentage of ALL Story Spotlight cards rather than those without a text box.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 409,
    "result": {
      "judgement": "Predicted query omits the required pre-modern format filter, so it counts cards outside that format and fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 236,
    "result": {
      "judgement": "Prediction returns bond_type and both atom IDs (via atom_id2 across two rows); extra molecule_id column is harmless, so it still answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 522,
    "result": {
      "judgement": "Predicted query selects card names and banned formats where edhrecRank = 1, satisfying the question; duplicates are permissible for a list request.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 440,
    "result": {
      "judgement": "Prediction returns the correct language; extra duplicate rows are acceptable for a list question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 531,
    "result": {
      "judgement": "Predicted query correctly selects the higher-reputation user between the two names; use of ORDER BY ... LIMIT 1 is semantically equivalent to gold aside from benign tie handling.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 539,
    "result": {
      "judgement": "Predicted query correctly joins posts to users and returns the owner’s DisplayName for the specified title, fully satisfying the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 573,
    "result": {
      "judgement": "Predicted query correctly retrieves the Text field for comments whose Score equals 17, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 537,
    "result": {
      "judgement": "Both queries count the posts whose OwnerUserId links to the user with DisplayName 'csgillespie'; counting OwnerUserId is equivalent to counting Id here, so prediction satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 678,
    "result": {
      "judgement": "Predicted query correctly finds Harvey Motulsky’s post with the highest view count, returning its id and title; logic matches gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 549,
    "result": {
      "judgement": "Prediction and gold are semantically identical—fetching the Body of the post whose Id matches ExcerptPostId for the tag 'bayesian'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 572,
    "result": {
      "judgement": "Prediction matches the title filter and returns the view count as requested.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 356,
    "result": {
      "judgement": "Predicted query correctly counts cards where power is '*' and matches question intent; difference from gold is immaterial.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 358,
    "result": {
      "judgement": "Prediction correctly retrieves the border color (black); extra duplicate rows do not violate the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 371,
    "result": {
      "judgement": "Predicted query matches gold and satisfies the stated calculation for French-language Story Spotlight rows.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 377,
    "result": {
      "judgement": "Prediction matches the gold and correctly counts cards whose original type is \"Summon - Angel\" but whose subtype column is not exactly 'Angel'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 633,
    "result": {
      "judgement": "Predicted query reasonably identifies posts owned by user 'slashnick' and correctly selects the one with the highest AnswerCount; no explicit requirement is violated despite using a simpler join path than gold.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 710,
    "result": {
      "judgement": "Predicted query correctly counts comments with score 0 on posts that have exactly one comment, whereas gold erroneously restricts to posts whose own score is 0.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 672,
    "result": {
      "judgement": "The query counts rows after the join, so users with multiple qualifying posts are counted multiple times; the question asks for the number of distinct users, requiring COUNT(DISTINCT users.id).",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 737,
    "result": {
      "judgement": "Prediction exactly matches the required join and filter, answering the question correctly.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 707,
    "result": {
      "judgement": "Predicted join correctly filters posts with 100–150 views and picks the top-scored comment, matching the question requirements just like the gold subquery.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 719,
    "result": {
      "judgement": "Prediction matches the question’s required filters and computes the same count as the gold; no extraneous predicates or omissions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 415,
    "result": {
      "judgement": "Prediction satisfies all stated requirements for computing the requested percentage; no extra or missing conditions identified.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 750,
    "result": {
      "judgement": "Predicted query correctly computes AVG(weight_kg) for superheroes whose gender is Female, matching the question and gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 736,
    "result": {
      "judgement": "Predicted query correctly finds the superhero with the minimum Intelligence value, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 760,
    "result": {
      "judgement": "Prediction matches the question’s requirements with equivalent logic to the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 427,
    "result": {
      "judgement": "Predicted query imposes an arbitrary join on cards.id = set_translations.id and matches sets.name instead of mcmName, adding unjustified restrictions that can omit valid languages.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 769,
    "result": {
      "judgement": "Prediction matches all required filters and selects the top durability hero for Dark Horse Comics just like the gold; no violations found.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 740,
    "result": {
      "judgement": "Predicted query correctly counts superheroes who are female and have Strength attribute value 100, matching the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 779,
    "result": {
      "judgement": "Predicted query correctly counts Amazo’s powers using the same join and filter as the gold; no extra or missing predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 747,
    "result": {
      "judgement": "Predicted query correctly counts all superheroes whose full_name is NULL, matching the question and gold intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 758,
    "result": {
      "judgement": "Predicted query matches the required conditions; duplicate rows do not violate the question’s wording, so it is acceptable.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 414,
    "result": {
      "judgement": "Predicted query joins on unrelated IDs, omitting languages (e.g., Chinese Traditional, Korean), so it returns an incomplete list and fails to answer the question fully.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 794,
    "result": {
      "judgement": "Prediction matches the gold logic: it selects the hero with the highest Speed attribute, using the required joins and ordering, and imposes no extra filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 766,
    "result": {
      "judgement": "Predicted query uses lowercase 'strength' which matches no rows, so it returns empty set and fails to identify the strongest hero.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 800,
    "result": {
      "judgement": "Prediction correctly computes blue-eyed heroes as eye_colour_id = 7 divided by total heroes; no unwarranted filters are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 822,
    "result": {
      "judgement": "Predicted query correctly counts superheroes whose skin colour is Green and alignment is Bad, matching question intent; difference in counted column is immaterial.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 785,
    "result": {
      "judgement": "Predicted query properly selects superhero_name for superheroes whose alignment is Neutral, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 424,
    "result": {
      "judgement": "Prediction divides normal layout textless cards by all textless cards, matching evidence, while gold divides by all cards, so gold is wrong and pred is correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 792,
    "result": {
      "judgement": "Prediction correctly joins the relevant tables, filters by superhero_name 'Abomination', and returns the associated power_name, fully answering the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 798,
    "result": {
      "judgement": "Predicted query correctly retrieves the publisher (DC Comics) for the three specified superheroes; returning the value once with DISTINCT satisfies the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 469,
    "result": {
      "judgement": "Prediction filters sets with mtgoCode present but outputs the isOnlineOnly flag, yielding values like 0 instead of the required overall Yes/No answer, so it does not correctly answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 857,
    "result": {
      "judgement": "Predicted query returns the correct latitude and longitude for the Abu Dhabi Grand Prix; extra join only duplicates identical rows, which does not contradict the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 629,
    "result": {
      "judgement": "Predicted query correctly computes count of 2010 votes divided by count of 2011 votes, matching the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 486,
    "result": {
      "judgement": "Predicted query counts only rows where convertedManaCost is non-null, so if any Coldsnap cards lack this value the percentage is inflated; gold counts all cards, matching the question’s intent to consider every card in the set.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 910,
    "result": {
      "judgement": "Predicted query filters by location instead of circuit name, so it may return any circuit located in Silverstone rather than specifically 'Silverstone Circuit', violating the explicit anchor requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 671,
    "result": {
      "judgement": "Prediction satisfies the question—returns display name of earliest Autobiographer badge holder; no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 685,
    "result": {
      "judgement": "Prediction chooses the original post owner while gold chooses the last editor; the phrase “user who posted it last time” reasonably allows either reading, so prediction cannot be judged wrong with certainty.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 717,
    "result": {
      "judgement": "Predicted query correctly joins superhero to hero_power to superpower and filters on superhero_name = '3-D Man' to list all matching power_name values.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 909,
    "result": {
      "judgement": "Predicted query correctly computes percentage of European Grand Prix races held in Germany, matching gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 733,
    "result": {
      "judgement": "Predicted query matches gold semantics, correctly counting Marvel superheroes with gold eyes.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 739,
    "result": {
      "judgement": "Predicted query correctly joins superhero, hero_power, and superpower to return superhero_name for power_name = 'Death Touch', matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 745,
    "result": {
      "judgement": "Prediction returns the publisher id matching the given name exactly as requested.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 544,
    "result": {
      "judgement": "Predicted query correctly joins posts to users on LastEditorUserId and filters by the given title to obtain the last editor’s display name, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 753,
    "result": {
      "judgement": "Predicted query applies the height filter and restricts to the “no eye colour” category (via eye_colour_id = 1); though it relies on the id value rather than joining, it still meets the stated conditions, so the Prover’s pass stands.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 764,
    "result": {
      "judgement": "Predicted query returns the same set of superpower names for hero_id 1; lack of DISTINCT is benign since duplicates do not occur.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 773,
    "result": {
      "judgement": "Predicted query correctly filters superheroes whose eye, hair, and skin colour IDs are all equal and returns their names with the publisher, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1003,
    "result": {
      "judgement": "Prediction matches question intent; counts accidents (statusId=3) per driver in Canadian GP, orders, returns top count, no extraneous filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 790,
    "result": {
      "judgement": "Predicted query correctly computes Emil Blonsky’s weight minus Charles Chandler’s weight using sums conditioned on their names, matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 576,
    "result": {
      "judgement": "Predicted query correctly joins comments to users and selects the display name for comment text 'thank you user93!', satisfying the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 797,
    "result": {
      "judgement": "Predicted query correctly selects superheroes whose eye_colour_id and hair_colour_id match the blue and brown colour entries, yielding the same result set as the gold, so it satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 806,
    "result": {
      "judgement": "Predicted query correctly joins superhero to colour and filters by full name to return the eye colour, matching the question requirements.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 825,
    "result": {
      "judgement": "Prediction matches question intent and uses correct joins; no extraneous or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 854,
    "result": {
      "judgement": "Predicted query answers the question, selecting lat and lng for Australian Grand Prix circuits; duplicates are permissible for a list question, so prediction is semantically correct.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1057,
    "result": {
      "judgement": "Predicted query correctly computes the mean home goals for Poland’s 2010/2011 matches, matching the question’s intent; any NULL-handling difference is moot given goals are always recorded.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 669,
    "result": {
      "judgement": "Predicted query correctly returns the earliest vote date for user 'chl', matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1042,
    "result": {
      "judgement": "Predicted query checks individual matches where a single match’s home goals exceed the global average away goals, rather than comparing each league’s average home goals to its average away goals, so it fails the core aggregate requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1078,
    "result": {
      "judgement": "Predicted SQL correctly returns the older player between the two and matches gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 704,
    "result": {
      "judgement": "The extra join does not change the requested columns and only links the foreign-keyed post; it will return the same tag row as long as the reference exists, which is the normal case, so the prediction satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1079,
    "result": {
      "judgement": "Predicted query matches gold logic in selecting the tallest player by ordering height descending and limiting to one.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 716,
    "result": {
      "judgement": "Predicted query correctly calculates the requested percentage over the same joined set as the gold, matching the evidence and question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1091,
    "result": {
      "judgement": "Predicted query counts all matches of that league and adds 1 only for those in April 2009, which yields the same count as directly filtering; no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 732,
    "result": {
      "judgement": "Prediction matches the question—returns the publisher of the hero with the minimal Speed attribute.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1098,
    "result": {
      "judgement": "Predicted query correctly selects Ajax records, orders by chanceCreationPassing descending, and returns the top score with its class, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 915,
    "result": {
      "judgement": "Prediction matches gold and correctly returns the nationality of the oldest driver.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 751,
    "result": {
      "judgement": "Predicted query matches gold logic, correctly lists five superpowers of male superheroes with appropriate joins and gender filter; no unjustified predicates are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 772,
    "result": {
      "judgement": "Predicted query matches all stated filters and selects the requested eye, hair, and skin colour ids, so it satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1096,
    "result": {
      "judgement": "Prediction matches the question requirements and mirrors the gold logic; no unjustified filters added or omitted.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 781,
    "result": {
      "judgement": "Predicted query correctly selects height_cm for heroes whose eye_colour matches Amber; no extraneous conditions added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 796,
    "result": {
      "judgement": "Predicted query correctly lists each attribute name and its corresponding value for superhero 3-D Man.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1130,
    "result": {
      "judgement": "Predicted query applies the correct filter and returns the requested team_short_name; lack of DISTINCT only causes benign duplicates, which the question does not forbid.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1114,
    "result": {
      "judgement": "Predicted query correctly averages overall_rating for Marko Arnautovic within the stated date range; the lack of SUBSTR does not violate the requirement and is equivalent given ISO datetime ordering.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 824,
    "result": {
      "judgement": "Predicted query correctly returns superheroes with 'Wind Control' power ordered alphabetically, matching gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 850,
    "result": {
      "judgement": "Predicted query correctly returns distinct race names whose circuits are located in Germany, satisfying the question’s requirement and matching gold semantics.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 989,
    "result": {
      "judgement": "Prediction returns the winner Robert Kubica along with his full race time, satisfying both “who” and “finish time”; its selection logic correctly isolates the lone full-format time, while the gold SQL only retrieves the time, omitting the champion’s name.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 868,
    "result": {
      "judgement": "Prediction returns the correct latitude and longitude for the Malaysian Grand Prix; extra duplicate rows do not violate the question’s requirement of providing the coordinates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1025,
    "result": {
      "judgement": "Prediction matches gold logic and fully satisfies the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1032,
    "result": {
      "judgement": "Predicted query correctly finds a league with the maximum match count (3040) and returns its name and count; gold query mixes non-aggregated league_id with MAX, so it can pick an arbitrary tied league and is logically flawed.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": false
    }
  },
  {
    "question_id": 1039,
    "result": {
      "judgement": "Predicted query correctly computes the player's average long_shots using equivalent counting logic, matching the question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 912,
    "result": {
      "judgement": "Predicted query returns the circuitRef for Marina Bay Street Circuit exactly as asked.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 931,
    "result": {
      "judgement": "Predicted query correctly returns the maximum fastest lap speed for the 2009 Spanish Grand Prix; extra join creates harmless duplicates but doesn’t alter the max.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1136,
    "result": {
      "judgement": "Query counts attribute rows rather than distinct players, violating the explicit requirement to count players.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1312,
    "result": {
      "judgement": "Prediction matches question and schema; no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1331,
    "result": {
      "judgement": "Predicted SQL matches the gold query and correctly retrieves the amount received by the Vice President.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1351,
    "result": {
      "judgement": "Predicted query correctly joins member to major and filters on first and last name to return the requested major.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 960,
    "result": {
      "judgement": "Predicted query matches gold logic selecting races by name and year then averaging fastest lap speed.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1094,
    "result": {
      "judgement": "Prediction matches gold; computes percentage difference of summed ratings and meets question requirements without extraneous predicates.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 971,
    "result": {
      "judgement": "Predicted query correctly selects the German driver with the earliest birthdate, matching the question’s intent; difference in date ordering function is immaterial.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1103,
    "result": {
      "judgement": "Predicted query uses exact timestamp rather than substring but still satisfies the date condition and returns same result, with no unjustified extra filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1113,
    "result": {
      "judgement": "Predicted query retrieves defenceAggressionClass for Hannover 96 on 2015-09-10, using exact timestamp instead of LIKE; satisfies the question without unjustified filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1201,
    "result": {
      "judgement": "Predicted query correctly calculates the percentage of 1980-born RA patients who are female, with no extra or missing conditions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1001,
    "result": {
      "judgement": "Predicted query orders on the raw q3 string and allows NULLs, so it picks Jarno Trulli who lacks a q3 time, whereas the fastest non-NULL q3 time (the actual P1) is Felipe Massa; hence prediction is semantically wrong.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1371,
    "result": {
      "judgement": "Predicted query correctly counts the attendees of the 'Women's Soccer' event; extra join to member table is benign and does not change the count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1380,
    "result": {
      "judgement": "Prediction sums the spent column for rows where category is 'Food', fulfilling the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1392,
    "result": {
      "judgement": "Prediction omits records from 2019-09-30, so it fails the explicit September range, despite correct ordering by amount.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1144,
    "result": {
      "judgement": "Prediction correctly finds any finishing and curve record for the heaviest-weight player and returns the requested columns, matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1409,
    "result": {
      "judgement": "Prediction matches the gold and correctly sums costs for the specified date.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1037,
    "result": {
      "judgement": "Prediction meets the stated filters and computes the requested percentage in the same way the gold does; no explicit requirement is violated.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1044,
    "result": {
      "judgement": "Prediction correctly filters players born in 1970-10 and returns names, matching the question and gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1426,
    "result": {
      "judgement": "Predicted query meets the stated requirement; the gold’s extra position filter reflects only one plausible reading and is not mandatory.",
      "verdict": false,
      "ambiguity": "ambiguous question",
      "gold_correct": true
    }
  },
  {
    "question_id": 1231,
    "result": {
      "judgement": "Prediction uses CPK > 250 instead of the required ≥ 250, wrongly excluding patients with exactly 250.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1153,
    "result": {
      "judgement": "Predicted query’s extra join to Examination eliminates patient 30609, yielding no rows, so it fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1457,
    "result": {
      "judgement": "Predicted query correctly identifies members whose expense cost exceeds the overall average and returns their full name and phone; duplicate rows are benign for a list question, so semantics match the request.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1068,
    "result": {
      "judgement": "Predicted query correctly filters players taller than 170, restricts dates 2010-2015 inclusive, and computes the mean of available overall_rating values; minor numeric gap vs gold stems from gold counting NULL ratings, not a requirement of the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1092,
    "result": {
      "judgement": "Predicted query correctly finds a league with the maximum 2008/2009 match count; returning one of several tied leagues is acceptable since tie-handling wasn’t specified.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1198,
    "result": {
      "judgement": "Predicted query correctly counts rows where SEX = 'F' and Diagnosis = 'APS', matching the question’s requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1209,
    "result": {
      "judgement": "Prediction orders diagnoses by descending birthday (younger first) whereas the question explicitly asks for ascending birthday (older first), violating the stated requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1506,
    "result": {
      "judgement": "Prediction matches the question, joining products to transactions occurring at Czech gas stations and selecting distinct descriptions.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1515,
    "result": {
      "judgement": "Prediction correctly joins transactions with customers and filters by the specified date and time, returning the segment; DISTINCT is benign.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1357,
    "result": {
      "judgement": "Predicted query omits the required filter source = 'Dues', so it may return non-dues payments and does not meet the explicit question requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1368,
    "result": {
      "judgement": "Predicted query matches gold logic, correctly fetching the major of the member with the specified phone number.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1133,
    "result": {
      "judgement": "Predicted query meets the stated filters; counting non-NULL player_fifa_api_id rather than id does not add a substantive filter and still answers the question.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1378,
    "result": {
      "judgement": "The predicted query correctly computes the maximum spent amount and the added join merely restricts to budgets that actually relate to an event, which is consistent with the question and does not violate any explicit requirement.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1399,
    "result": {
      "judgement": "Prediction correctly checks Maya Mclean’s attendance at the specified event and returns a non-empty result, which implies \"Yes\"; logic aligns with the question and schema.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1147,
    "result": {
      "judgement": "Predicted query correctly returns a player with the maximum overall_rating, satisfying the request for “one” such player, so no explicit requirement is violated.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1405,
    "result": {
      "judgement": "Predicted query returns categories with their budget amounts ordered ascending; despite omitting SUM/GROUP BY, data evidently has one row per category so requirements are met.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1152,
    "result": {
      "judgement": "Prediction correctly computes the requested ratio for SLE patients with identical filters and aggregation as the gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1281,
    "result": {
      "judgement": "Predicted query correctly selects the birth date of the youngest patient with GOT ≥ 60.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1422,
    "result": {
      "judgement": "Prediction matches gold in logic and satisfies the question by listing distinct event categories at location 'MU 215'.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1157,
    "result": {
      "judgement": "Prediction matches the question requirements; missing DISTINCT is benign for a simple list.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1195,
    "result": {
      "judgement": "Prediction satisfies all specified filters and computes AVG(ALB) correctly; same semantics as gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1435,
    "result": {
      "judgement": "Prediction meets the query requirements; duplicate names do not violate the question’s wording.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1208,
    "result": {
      "judgement": "Predicted query returns distinct male patient IDs having any GPT value ≥ 60, matching the question’s requirement and aligns with gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1346,
    "result": {
      "judgement": "Predicted query matches gold and correctly retrieves Carlo Jacobs’s phone number.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1356,
    "result": {
      "judgement": "Predicted query correctly joins member to major and filters for position='President', matching the question’s intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1471,
    "result": {
      "judgement": "Predicted query multiplies the EUR/CZK ratio by 100, giving a percentage, whereas the question and provided evidence explicitly define the ratio as EUR_count / CZK_count without scaling.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1362,
    "result": {
      "judgement": "The query counts rows instead of distinct city names, so duplicates could inflate the answer; DISTINCT is required for “How many cities”.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1376,
    "result": {
      "judgement": "Predicted query correctly identifies closed events and orders by spend-to-budget ratio to return the top event, matching question intent.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1252,
    "result": {
      "judgement": "Prediction uses >=900 and <=2000, including boundary values explicitly excluded (should be >900 and <2000), breaching stated requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1398,
    "result": {
      "judgement": "Prediction satisfies the question with correct join, filter on Advertisement, and max-spend ordering identical to gold.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1411,
    "result": {
      "judgement": "Predicted query correctly lists the expense descriptions linked to member Sacha Harrison with no unwarranted filters and matches the gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1432,
    "result": {
      "judgement": "Prediction satisfies all stated filters and computes the required percentage exactly like the gold; no unjustified predicates or omissions are present.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1317,
    "result": {
      "judgement": "Prediction matches the question’s need by counting students with Medium T-shirt size who attended the named event; the minor difference in counted column vs. gold does not change the row count.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1334,
    "result": {
      "judgement": "Prediction aligns with the question, selecting first and last names of members whose zip code is in Illinois; no extraneous or missing filters.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1344,
    "result": {
      "judgement": "Prediction matches the required filters and retrieves the requested notes for the fundraising on 2019-09-14.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1464,
    "result": {
      "judgement": "Predicted query uses literal '9/9/2019' that does not match stored '2019-09-09', returning no rows, so it fails to list the students and amounts for that date.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1514,
    "result": {
      "judgement": "Prediction retrieves the customer's currency for the specified date-time, matching the question; extra gasstation join in gold is unnecessary.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1361,
    "result": {
      "judgement": "Prediction matches gold; sums cost where description is 'Pizza' as required.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1525,
    "result": {
      "judgement": "Prediction meets the question: it computes the share of EUR users among customers with transactions on 2012-08-25, matching gold logic.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1375,
    "result": {
      "judgement": "Predicted query’s department filter has an extra space, returning no rows, so it fails to list the department’s members.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1490,
    "result": {
      "judgement": "Both prediction and gold count joined rows rather than distinct LAM customers, so the predicted SQL does not satisfy the stated formula that uses the number of customers; requirement for distinct customer counting is violated.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": false
    }
  },
  {
    "question_id": 1381,
    "result": {
      "judgement": "Predicted query groups by first/last name instead of unique student id, so two students sharing a name could be merged and counted together, violating the per-student requirement.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1394,
    "result": {
      "judgement": "Prediction matches gold and correctly counts members with the Physics Teaching major.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1509,
    "result": {
      "judgement": "Predicted query correctly counts Czech transactions with date on or after 2012-01-01; no unjustified filters are added.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1403,
    "result": {
      "judgement": "Predicted SQL omits the explicit remaining<0 filter required to capture only over-budget events, so it can return an event that did not exceed budget.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1427,
    "result": {
      "judgement": "Predicted query correctly filters by location, type, and zero spent and returns the budget categories, so it answers the question despite duplicate rows.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1460,
    "result": {
      "judgement": "Predicted query fails to match the correct expense description value, returning no rows, so it does not answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1521,
    "result": {
      "judgement": "Predicted query uses non-zero-padded time literals that miss the matching rows, returning 0 instead of the actual 14 transactions, so it fails to answer the question.",
      "verdict": true,
      "ambiguity": "na",
      "gold_correct": true
    }
  },
  {
    "question_id": 1528,
    "result": {
      "judgement": "Predicted query correctly calculates the percentage of Premium stations among all stations in SVK exactly as requested.",
      "verdict": false,
      "ambiguity": "na",
      "gold_correct": true
    }
  }
]