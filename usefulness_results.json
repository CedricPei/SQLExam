[
  {
    "question_id": 637,
    "question": "State all the tags used by Mark Meckes in his posts that doesn't have comments.",
    "predicted_sql": "SELECT DISTINCT T2.`TagName`\n  FROM posts AS T1\n  INNER JOIN tags AS T2\n  ON T1.`Tags` LIKE '%<' || T2.`TagName` || '>%'\n  WHERE T1.`OwnerUserId` = (\n    SELECT `Id`\n    FROM users\n    WHERE `DisplayName` = 'Mark Meckes'\n  )\n  AND T1.`CommentCount` = 0",
    "ex": 0,
    "usefulness": 0.9333,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1389,
    "question": "Which event has the lowest cost?",
    "predicted_sql": "SELECT T1.`event_name`\n  FROM event AS T1\n  INNER JOIN budget AS T2\n  ON T1.`event_id` = T2.`link_to_event`\n  INNER JOIN expense AS T3\n  ON T2.`budget_id` = T3.`link_to_budget`\n  WHERE T3.`cost` = (\n    SELECT MIN(`cost`)\n    FROM expense\n  )",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1493,
    "question": "In February 2012, what percentage of customers consumed more than 528.3?",
    "predicted_sql": "SELECT \n    (COUNT(DISTINCT CASE WHEN `Consumption` > 528.3 THEN `CustomerID` END) * 100.0 / \n    COUNT(DISTINCT `CustomerID`)) AS Percentage\nFROM yearmonth\nWHERE `Date` LIKE '201202%'",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "RandomDBEval"
  },
  {
    "question_id": 465,
    "question": "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?",
    "predicted_sql": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS has_korean_version\n  FROM foreign_data\n  WHERE `uuid` = (\n    SELECT `uuid`\n    FROM cards\n    WHERE `name` = 'Ancestor''s Chosen'\n  )\n  AND `language` = 'Korean'",
    "ex": 0,
    "usefulness": 0.7333,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1044,
    "question": "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "predicted_sql": "SELECT `player_name`\n  FROM Player\n  WHERE strftime('%Y', `birthday`) = '1970'\n  AND strftime('%m', `birthday`) = '10'\n  AND `player_name` IS NOT NULL",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "RandomDBEval"
  },
  {
    "question_id": 1275,
    "question": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.`ID`)\n  FROM Patient AS T1\n  INNER JOIN Laboratory AS T2\n  ON T1.`ID` = T2.`ID`\n  WHERE T2.`CENTROMEA` IN ('-', '+-')\n  AND T2.`SSB` IN ('-', '+-')\n  AND T1.`SEX` = 'M'",
    "ex": 0,
    "usefulness": 1.0,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1243,
    "question": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "predicted_sql": "SELECT \n  (COUNT(CASE WHEN T2.`SEX` = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage\n  FROM Laboratory AS T1\n  INNER JOIN Patient AS T2\n  ON T1.`ID` = T2.`ID`\n  WHERE T2.`Birthday` IS NOT NULL\n  AND (strftime('%Y', 'now') - strftime('%Y', T2.`Birthday`)) > 55\n  AND T1.`PT` >= 14",
    "ex": 0,
    "usefulness": 1.0,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1426,
    "question": "List the last name of members with a major in environmental engineering and include its department and college name.",
    "predicted_sql": "SELECT T1.`last_name`, T2.`department`, T2.`college`\n  FROM member AS T1\n  INNER JOIN major AS T2\n  ON T1.`link_to_major` = T2.`major_id`\n  WHERE T2.`major_name` = 'Environmental Engineering'",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "RandomDBEval"
  },
  {
    "question_id": 459,
    "question": "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "predicted_sql": "SELECT \n  CASE \n    WHEN (SELECT `convertedManaCost` FROM cards WHERE `name` = 'Serra Angel') > \n         (SELECT `convertedManaCost` FROM cards WHERE `name` = 'Shrine Keeper') \n    THEN 'Serra Angel' \n    ELSE 'Shrine Keeper' \n  END AS more_expensive_card",
    "ex": 1,
    "usefulness": 0.0,
    "eval_path": "RandomDBEval"
  },
  {
    "question_id": 1376,
    "question": "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "predicted_sql": "SELECT T1.`event_name`\n  FROM event AS T1\n  INNER JOIN budget AS T2\n  ON T1.`event_id` = T2.`link_to_event`\n  WHERE T1.`status` = 'Closed'\n  AND T2.`amount` > 0\n  ORDER BY (T2.`spent` / T2.`amount`) DESC\n  LIMIT 1",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "RandomDBEval"
  },
  {
    "question_id": 340,
    "question": "Which are the cards that have incredibly powerful foils.",
    "predicted_sql": "SELECT `name`\n  FROM cards\n  WHERE `cardKingdomFoilId` IS NOT NULL\n  AND `cardKingdomId` IS NOT NULL",
    "ex": 0,
    "usefulness": 1.0,
    "eval_path": "VeriEQL_or_SQLGlotEval"
  },
  {
    "question_id": 46,
    "question": "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "predicted_sql": "SELECT T1.`sname`, T1.`enroll12`\n  FROM satscores AS T1\n  INNER JOIN schools AS T2\n  ON T1.`cds` = T2.`CDSCode`\n  WHERE T2.`DOC` = '31'\n  AND T2.`GSoffered` = 'K-12'\n  ORDER BY T1.`enroll12` DESC\n  LIMIT 1",
    "ex": 0,
    "usefulness": 0.8333,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 785,
    "question": "Describe the names of neutral alignment superheroes.",
    "predicted_sql": "SELECT T1.`superhero_name`\n  FROM superhero AS T1\n  INNER JOIN alignment AS T2\n  ON T1.`alignment_id` = T2.`id`\n  WHERE T2.`alignment` = 'Neutral'",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "VeriEQL_or_SQLGlotEval"
  },
  {
    "question_id": 1356,
    "question": "Which department was the President of the club in?",
    "predicted_sql": "SELECT T2.`department`\n  FROM member AS T1\n  INNER JOIN major AS T2\n  ON T1.`link_to_major` = T2.`major_id`\n  WHERE T1.`position` = 'President'",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "VeriEQL_or_SQLGlotEval"
  },
  {
    "question_id": 544,
    "question": "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?",
    "predicted_sql": "SELECT T2.`DisplayName`\n  FROM posts AS T1\n  INNER JOIN users AS T2\n  ON T1.`LastEditorUserId` = T2.`Id`\n  WHERE T1.`Title` = 'Examples for teaching: Correlation does not mean causation'\n  AND T1.`LastEditorUserId` IS NOT NULL",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "VeriEQL_or_SQLGlotEval"
  },
  {
    "question_id": 937,
    "question": "What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?",
    "predicted_sql": "SELECT `time`\n  FROM results\n  WHERE `raceId` = (\n    SELECT `raceId`\n    FROM races\n    WHERE `year` = 2008 AND `name` = 'Chinese Grand Prix'\n  )\n  AND `position` = 2",
    "ex": 0,
    "usefulness": 0.9474,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1505,
    "question": "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.`CustomerID`)\n  FROM customers AS T1\n  INNER JOIN yearmonth AS T2\n  ON T1.`CustomerID` = T2.`CustomerID`\n  WHERE T1.`Currency` = 'EUR'\n  AND T2.`Consumption` > 1000",
    "ex": 0,
    "usefulness": 1.0,
    "eval_path": "SQLEvaluationPipeline"
  },
  {
    "question_id": 1501,
    "question": "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "predicted_sql": "SELECT DISTINCT g.`Country`\nFROM yearmonth ym\nJOIN transactions_1k t ON ym.`CustomerID` = t.`CustomerID`\nJOIN gasstations g ON t.`GasStationID` = g.`GasStationID`\nWHERE SUBSTR(ym.`Date`, 1, 4) = '2013' \n  AND SUBSTR(ym.`Date`, 5, 2) = '06'",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "RandomDBEval"
  },
  {
    "question_id": 1361,
    "question": "What is the total cost of the pizzas for all the events?",
    "predicted_sql": "SELECT SUM(`cost`) AS total_pizza_cost\n  FROM expense\n  WHERE `expense_description` = 'Pizza'",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "VeriEQL_or_SQLGlotEval"
  },
  {
    "question_id": 1239,
    "question": "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "predicted_sql": "SELECT T1.`ID`, (strftime('%Y', 'now') - strftime('%Y', T2.`Birthday`)) as age\n  FROM (\n    SELECT `ID`, COUNT(*) as exam_count\n    FROM Laboratory\n    WHERE `HCT` >= 52\n    GROUP BY `ID`\n    HAVING COUNT(*) >= 2\n  ) AS T1\n  INNER JOIN Patient AS T2\n  ON T1.`ID` = T2.`ID`\n  WHERE T2.`Birthday` IS NOT NULL",
    "ex": 1,
    "usefulness": 1.0,
    "eval_path": "RandomDBEval"
  }
]