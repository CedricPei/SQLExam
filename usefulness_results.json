[
  {
    "question_id": "1322",
    "question": "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "predicted_sql": "SELECT T1.event_name FROM event AS T1  INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id  HAVING COUNT(T2.link_to_event) > 10 EXCEPT SELECT T1.event_name  FROM event AS T1  WHERE T1.type = 'Meeting'",
    "usefulness": 0.7222
  },
  {
    "question_id": "1323",
    "question": "List all the names of events that had an attendance of over 20 students but were not fundraisers.",
    "predicted_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_event) > 20 EXCEPT SELECT T1.event_name FROM event AS T1  WHERE T1.type = 'Fundraiser'",
    "usefulness": 1.0
  },
  {
    "question_id": "1058",
    "question": "Who has the highest average finishing rate between the highest and shortest football player?",
    "predicted_sql": "SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing) result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER BY result DESC LIMIT 1",
    "usefulness": 1.0
  },
  {
    "question_id": "930",
    "question": "In which Formula_1 race did Lewis Hamilton rank the highest?",
    "predicted_sql": "SELECT name FROM races WHERE raceId IN ( SELECT raceId FROM results WHERE rank = 1 AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) )",
    "usefulness": 1.0
  },
  {
    "question_id": "726",
    "question": "Rank heroes published by Marvel Comics by their height in descending order.",
    "predicted_sql": "SELECT superhero_name, height_cm, RANK() OVER (ORDER BY height_cm DESC) AS HeightRank FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'",
    "usefulness": 1.0
  },
  {
    "question_id": "728",
    "question": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
    "predicted_sql": "SELECT colour.colour AS EyeColor, COUNT(superhero.id) AS Count, RANK() OVER (ORDER BY COUNT(superhero.id) DESC) AS PopularityRank FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour",
    "usefulness": 1.0
  },
  {
    "question_id": "730",
    "question": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
    "predicted_sql": "SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id)",
    "usefulness": 1.0
  },
  {
    "question_id": "738",
    "question": "Which superheroes have a durability attribute value of less than 50?",
    "predicted_sql": "SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_attribute AS T2 INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50 AND T1.id = T2.hero_id)",
    "usefulness": 1.0
  },
  {
    "question_id": "17",
    "question": "Rank schools by their average score in Writing where the score is greater than 499, showing their charter numbers.",
    "predicted_sql": "SELECT CharterNum, AvgScrWrite, RANK() OVER (ORDER BY AvgScrWrite DESC) AS WritingScoreRank FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite > 499 AND CharterNum is not null",
    "usefulness": 1.0
  },
  {
    "question_id": "41",
    "question": "List the names of virtual schools that are among the top 5 in their respective counties based on average reading scores.",
    "predicted_sql": "SELECT School FROM (SELECT T2.School,T1.AvgScrRead, RANK() OVER (PARTITION BY T2.County ORDER BY T1.AvgScrRead DESC) AS rnk FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ) ranked_schools WHERE rnk <= 5",
    "usefulness": 0.7895
  }
]